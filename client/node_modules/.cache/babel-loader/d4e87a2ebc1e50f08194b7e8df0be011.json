{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\nexports.ConnectionPropertyChangedEvent = void 0;\n\nvar Event_1 = require(\"./Event\");\n/**\n * **This feature is part of OpenVidu Pro tier** <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" target=\"_blank\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n *\n * Defines event `connectionPropertyChanged` dispatched by [[Session]] object.\n * This event is fired when any property of the local [[Connection]] object changes.\n * The properties that may change are [[Connection.role]] and [[Connection.record]].\n *\n * The only way the Connection properties may change is by updating them through:\n *\n * - [API REST](/en/stable/reference-docs/REST-API/#patch-openviduapisessionsltsession_idgtconnectionltconnection_idgt)\n * - [openvidu-java-client](/en/stable/reference-docs/openvidu-java-client/#update-a-connection)\n * - [openvidu-node-client](/en/stable/reference-docs/openvidu-node-client/#update-a-connection)<br><br>\n */\n\n\nvar ConnectionPropertyChangedEvent =\n/** @class */\nfunction (_super) {\n  __extends(ConnectionPropertyChangedEvent, _super);\n  /**\n   * @hidden\n   */\n\n\n  function ConnectionPropertyChangedEvent(target, connection, changedProperty, newValue, oldValue) {\n    var _this = _super.call(this, false, target, 'connectionPropertyChanged') || this;\n\n    _this.connection = connection;\n    _this.changedProperty = changedProperty;\n    _this.newValue = newValue;\n    _this.oldValue = oldValue;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  // tslint:disable-next-line:no-empty\n\n\n  ConnectionPropertyChangedEvent.prototype.callDefaultBehavior = function () {};\n\n  return ConnectionPropertyChangedEvent;\n}(Event_1.Event);\n\nexports.ConnectionPropertyChangedEvent = ConnectionPropertyChangedEvent;","map":{"version":3,"sources":["../../../src/OpenViduInternal/Events/ConnectionPropertyChangedEvent.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;;;;;;;;;;;;;;AAaA,IAAA,8BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA;AAsBhD;;;;;AAGA,WAAA,8BAAA,CAAY,MAAZ,EAA6B,UAA7B,EAAqD,eAArD,EAA8E,QAA9E,EAAgG,QAAhG,EAAgH;AAAhH,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,EAAa,MAAb,EAAqB,2BAArB,KAAiD,IADrD;;AAEI,IAAA,KAAI,CAAC,UAAL,GAAkB,UAAlB;AACA,IAAA,KAAI,CAAC,eAAL,GAAuB,eAAvB;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;;AACH;AAED;;;AAGA;;;AACA,EAAA,8BAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,YAAA,CAAyB,CAAzB;;AAEJ,SAAA,8BAAA;AAAC,CAvCD,CAAoD,OAAA,CAAA,KAApD,CAAA;;AAAa,OAAA,CAAA,8BAAA,GAAA,8BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.ConnectionPropertyChangedEvent = void 0;\nvar Event_1 = require(\"./Event\");\n/**\n * **This feature is part of OpenVidu Pro tier** <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" target=\"_blank\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n *\n * Defines event `connectionPropertyChanged` dispatched by [[Session]] object.\n * This event is fired when any property of the local [[Connection]] object changes.\n * The properties that may change are [[Connection.role]] and [[Connection.record]].\n *\n * The only way the Connection properties may change is by updating them through:\n *\n * - [API REST](/en/stable/reference-docs/REST-API/#patch-openviduapisessionsltsession_idgtconnectionltconnection_idgt)\n * - [openvidu-java-client](/en/stable/reference-docs/openvidu-java-client/#update-a-connection)\n * - [openvidu-node-client](/en/stable/reference-docs/openvidu-node-client/#update-a-connection)<br><br>\n */\nvar ConnectionPropertyChangedEvent = /** @class */ (function (_super) {\n    __extends(ConnectionPropertyChangedEvent, _super);\n    /**\n     * @hidden\n     */\n    function ConnectionPropertyChangedEvent(target, connection, changedProperty, newValue, oldValue) {\n        var _this = _super.call(this, false, target, 'connectionPropertyChanged') || this;\n        _this.connection = connection;\n        _this.changedProperty = changedProperty;\n        _this.newValue = newValue;\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    ConnectionPropertyChangedEvent.prototype.callDefaultBehavior = function () { };\n    return ConnectionPropertyChangedEvent;\n}(Event_1.Event));\nexports.ConnectionPropertyChangedEvent = ConnectionPropertyChangedEvent;\n//# sourceMappingURL=ConnectionPropertyChangedEvent.js.map"]},"metadata":{},"sourceType":"script"}