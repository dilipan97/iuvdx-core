{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dilip/Desktop/iuvdx-core-old/client/src/components/ipcam-server/IpcamServerComponent.js\";\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction getModalStyle() {\n  var top = 50;\n  var left = 50;\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      outline: 'none',\n      position: 'absolute',\n      width: 700,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(4, 4, 4)\n    },\n    container: {\n      maxHeight: 400\n    },\n    btn: {\n      marginLeft: 30\n    },\n    title: _objectSpread(_objectSpread({\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: \"flex-start\"\n    })\n  };\n}); // assigning unique id for each camera\n\nvar rowId = 4; // contains already connected cameras  \n\nvar connectedCameras = [];\n\nvar IpcamServerComponent = function IpcamServerComponent(props) {\n  var classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  var _useState = useState(getModalStyle),\n      _useState2 = _slicedToArray(_useState, 1),\n      modalStyle = _useState2[0]; // newly added cameras will go into tableRows\n\n\n  var _useState3 = useState([{\n    id: 0,\n    cam: 'Russian building',\n    ip: 'rtsp://195.46.114.132/live/ch00_0',\n    del: false,\n    err: false\n  }, {\n    id: 1,\n    cam: 'Wickenburg, Arizona',\n    ip: 'rtsp://98.163.61.242/live/ch00_0',\n    del: false,\n    err: false\n  }, {\n    id: 2,\n    cam: 'City',\n    ip: 'rtsp://91.191.213.49:554/live_mpeg4.sdp',\n    del: false,\n    err: false\n  } // {id:3, cam:'Hessdalen', ip:'rtsp://freja.hiof.no:1935/rtplive/definst/hessdalen03.stream', del:false, err:false}\n  ]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableRows = _useState4[0],\n      setTableRows = _useState4[1]; // deleted cameras is stored in this variable\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deleteCam = _useState6[0],\n      setDeleteCam = _useState6[1];\n\n  var handleClose = function handleClose() {\n    props.setClose();\n  }; // function to handle checkbox onchecked validation\n\n\n  var handleChecked = function handleChecked(idx) {\n    return function (e) {\n      // changes the checked value status\n      var trows = _toConsumableArray(tableRows);\n\n      trows[idx] = {\n        id: trows[idx].id,\n        cam: trows[idx].cam !== '' ? trows[idx].cam : '',\n        ip: trows[idx].ip !== '' ? trows[idx].ip : '',\n        del: e.target.checked,\n        err: trows[idx].err\n      };\n      setTableRows(trows); // cameras added to list if the box is checked\n\n      if (e.target.checked) {\n        setDeleteCam([].concat(_toConsumableArray(deleteCam), [tableRows[idx].id]));\n      } else {\n        var index = deleteCam.indexOf(tableRows[idx].id);\n\n        if (index > -1) {\n          deleteCam.splice(index, 1);\n        }\n\n        setDeleteCam(deleteCam);\n      }\n    };\n  }; // disconnects all the selected cameras from the session\n\n\n  var deleteSelectedCam = function deleteSelectedCam() {\n    var camToDelete = []; // validates the cameras that are to be deleted\n\n    var _iterator = _createForOfIteratorHelper(deleteCam),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var id = _step.value;\n        var index = tableRows.findIndex(function (val) {\n          return val.id === id;\n        });\n\n        if (tableRows[index].cam !== '' && tableRows[index].ip !== '') {\n          camToDelete.push(tableRows[index].cam);\n          var indx = connectedCameras.indexOf(id); // removing cameras from already connected camera list\n\n          if (indx > -1) {\n            connectedCameras.splice(indx, 1);\n          }\n        }\n\n        tableRows.splice(index, 1);\n        setTableRows(tableRows);\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      } // call for diconnecting the cameras \n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (camToDelete.length > 0) {\n      props.removeCam(camToDelete);\n    }\n\n    setDeleteCam([]);\n  }; // establishes connection for the cameras\n\n\n  var connectSelectedCam = function connectSelectedCam() {\n    var camToConnect = []; // adds only the cameras that are not already connected\n\n    var _iterator2 = _createForOfIteratorHelper(tableRows),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var val = _step2.value;\n\n        if (!val.err && !connectedCameras.includes(val.id)) {\n          if (val.cam !== '' && val.ip !== '') {\n            camToConnect.push(val);\n            connectedCameras.push(val.id);\n          }\n        }\n      } // call for establishing connection\n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    if (camToConnect.length > 0) {\n      props.getToken(camToConnect);\n    }\n  }; // adds new row to the table\n\n\n  var handleAddRow = function handleAddRow() {\n    var item = {\n      id: rowId,\n      cam: '',\n      ip: '',\n      del: false,\n      err: false\n    };\n    rowId++;\n    setTableRows([].concat(_toConsumableArray(tableRows), [item]));\n  }; // remove all the rows that are empty\n\n\n  var handleRemoveRow = function handleRemoveRow() {\n    var nonEmptyRows = tableRows.filter(function (val) {\n      return val.cam !== '' && val.ip !== '';\n    });\n    setTableRows(nonEmptyRows);\n  }; // handle changes while modifying details in the table\n\n\n  var handleChange = function handleChange(idx) {\n    return function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      var rows = _toConsumableArray(tableRows); // adds the camera name\n\n\n      if (name === 'cam') {\n        rows[idx] = {\n          id: rows[idx].id,\n          [name]: value,\n          ip: rows[idx].ip !== '' ? rows[idx].ip : '',\n          del: rows[idx].del ? true : false,\n          err: value !== '' && rows.find(function (val) {\n            return val.cam === value;\n          })\n        };\n      } else {\n        // adds the camera rstp url\n        rows[idx] = {\n          id: rows[idx].id,\n          cam: rows[idx].cam !== '' ? rows[idx].cam : '',\n          [name]: value,\n          del: rows[idx].del ? true : false,\n          err: rows[idx].err\n        };\n      }\n\n      setTableRows(rows);\n    };\n  }; // function to the render dynamic table\n\n\n  var renderTable = function renderTable() {\n    return tableRows.map(function (rows, idx) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        error: tableRows[idx].err ? true : false,\n        disabled: tableRows[idx].err ? true : false,\n        label: \"Video url\",\n        name: \"ip\",\n        variant: \"outlined\",\n        value: tableRows[idx].ip,\n        onChange: handleChange(idx),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        error: tableRows[idx].err ? true : false,\n        label: \"Name\",\n        name: \"cam\",\n        variant: \"outlined\",\n        helperText: tableRows[idx].err ? 'Duplicate camera name' : '',\n        value: tableRows[idx].cam,\n        onChange: handleChange(idx),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        shrink: true,\n        id: \"demo-simple-select-placeholder-label-label\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n        labelId: \"demo-simple-select-placeholder-label-label\",\n        id: \"demo-simple-select-placeholder-label\",\n        value: age,\n        onChange: handleChange,\n        displayEmpty: true,\n        className: classes.selectEmpty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, \"None\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, \"Rtsp to Rtp\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, \"Rtsp to Rtsp\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, \"Select type of \"))), /*#__PURE__*/React.createElement(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        indeterminate: true,\n        inputProps: {\n          'aria-label': 'indeterminate checkbox'\n        },\n        checked: tableRows[idx].del,\n        onChange: handleChecked(idx),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 12\n        }\n      })));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: props.open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Subscribe to IP Cameras\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: connectSelectedCam,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, \"Connect\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: deleteSelectedCam,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, \"Disconnect\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, \"Video Url\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, \"Port\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, \"type\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, \"Remove\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, renderTable()))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleAddRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Add Row\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleRemoveRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, \"Delete Empty Rows\"))));\n};\n\nexport default IpcamServerComponent;","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core-old/client/src/components/ipcam-server/IpcamServerComponent.js"],"names":["React","useState","makeStyles","Modal","Button","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Divider","Typography","Checkbox","getModalStyle","top","left","transform","useStyles","theme","paper","outline","position","width","backgroundColor","palette","background","padding","spacing","container","maxHeight","btn","marginLeft","title","display","alignItems","mixins","toolbar","justifyContent","rowId","connectedCameras","IpcamServerComponent","props","classes","modalStyle","id","cam","ip","del","err","tableRows","setTableRows","deleteCam","setDeleteCam","handleClose","setClose","handleChecked","idx","e","trows","target","checked","index","indexOf","splice","deleteSelectedCam","camToDelete","findIndex","val","push","indx","length","removeCam","connectSelectedCam","camToConnect","includes","getToken","handleAddRow","item","handleRemoveRow","nonEmptyRows","filter","handleChange","name","value","rows","find","renderTable","map","formControl","age","selectEmpty","open","table"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    outline: 'none',\n    position: 'absolute',\n    width: 700,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4, 4, 4),\n  },\n  container: {\n    maxHeight: 400,\n  },\n  btn: {\n    marginLeft: 30,\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1), ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\"\n  }\n}));\n\n// assigning unique id for each camera\nlet rowId = 4;\n\n// contains already connected cameras  \nlet connectedCameras = [];\n\nconst IpcamServerComponent =(props) =>{\n\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n\n  // newly added cameras will go into tableRows\n  const [tableRows, setTableRows] = useState([\n    {id:0, cam:'Russian building', ip:'rtsp://195.46.114.132/live/ch00_0', del:false, err:false},\n    {id:1, cam:'Wickenburg, Arizona', ip:'rtsp://98.163.61.242/live/ch00_0', del:false, err:false},\n    {id:2, cam:'City', ip:'rtsp://91.191.213.49:554/live_mpeg4.sdp', del:false, err:false},\n    // {id:3, cam:'Hessdalen', ip:'rtsp://freja.hiof.no:1935/rtplive/definst/hessdalen03.stream', del:false, err:false}\n  ]);\n\n  // deleted cameras is stored in this variable\n  const [deleteCam, setDeleteCam] = useState([]);\n\n  const handleClose = () => {\n    props.setClose();\n  };\n\n  // function to handle checkbox onchecked validation\n  const handleChecked = (idx) => (e) => {\n\n    // changes the checked value status\n    const trows = [...tableRows];\n    trows[idx] = {\n      id: trows[idx].id,\n      cam: trows[idx].cam !== ''? trows[idx].cam: '',\n      ip: trows[idx].ip !== ''? trows[idx].ip: '',\n      del: e.target.checked,\n      err: trows[idx].err\n    }\n    setTableRows(trows);\n\n    // cameras added to list if the box is checked\n    if(e.target.checked) {\n      setDeleteCam([...deleteCam, tableRows[idx].id])\n    }\n    else {\n\n      const index = deleteCam.indexOf(tableRows[idx].id);\n      if(index > -1) {\n        deleteCam.splice(index, 1);\n      }\n      setDeleteCam(deleteCam);\n    }\n  }\n\n  // disconnects all the selected cameras from the session\n  const deleteSelectedCam = () => {\n\n    const camToDelete = [];\n    \n    // validates the cameras that are to be deleted\n    for(const id of deleteCam) {\n\n      const index = tableRows.findIndex(val => val.id === id);\n      if(tableRows[index].cam !== '' && tableRows[index].ip !== '') {\n        \n        camToDelete.push(tableRows[index].cam);\n        let indx = connectedCameras.indexOf(id);\n\n        // removing cameras from already connected camera list\n        if (indx > -1) {\n          connectedCameras.splice(indx, 1);\n        }\n      }\n      tableRows.splice(index, 1);\n      setTableRows(tableRows);\n    }\n\n    // call for diconnecting the cameras \n    if(camToDelete.length > 0) {\n      props.removeCam(camToDelete);\n    }\n\n    setDeleteCam([]);\n  }\n\n  // establishes connection for the cameras\n  const connectSelectedCam = () => {\n\n    let camToConnect = [];\n\n    // adds only the cameras that are not already connected\n    for(const val of tableRows) {\n      if(!val.err && !connectedCameras.includes(val.id)) {\n        if(val.cam !== '' && val.ip !== '') {\n          camToConnect.push(val);\n          connectedCameras.push(val.id);\n        }\n      }\n    }\n\n    // call for establishing connection\n    if(camToConnect.length > 0) {\n      props.getToken(camToConnect);\n    }\n  }\n\n  // adds new row to the table\n  const handleAddRow = () => {\n    const item = {\n      id  : rowId,\n      cam : '',\n      ip  : '',\n      del : false,\n      err : false\n    };\n    rowId++;\n    setTableRows([...tableRows, item]);\n  };\n\n  // remove all the rows that are empty\n  const handleRemoveRow = () => {\n    const nonEmptyRows = tableRows.filter(val => val.cam !== '' && val.ip !== '');\n    setTableRows(nonEmptyRows)\n  };\n\n  // handle changes while modifying details in the table\n  const handleChange = (idx) => (e) => {\n\n    const { name, value } = e.target;\n    const rows = [...tableRows];\n\n    // adds the camera name\n    if(name === 'cam') {\n      rows[idx] = {\n        id    : rows[idx].id,\n        [name]: value,\n        ip    : rows[idx].ip !== ''? rows[idx].ip: '',\n        del   : rows[idx].del? true: false,\n        err   : value !== '' && rows.find(val => val.cam === value)\n      }\n    }\n    else { // adds the camera rstp url\n      rows[idx] = {\n        id    : rows[idx].id,\n        cam   : rows[idx].cam !== ''? rows[idx].cam: '',\n        [name]: value,\n        del   : rows[idx].del? true: false,\n        err   : rows[idx].err\n      }\n    }\n    setTableRows(rows);\n  };\n\n  // function to the render dynamic table\n  const renderTable = () => {\n    return tableRows.map((rows, idx) => {\n      return (\n        <TableRow key={idx}>\n          \n          <TableCell>\n            <TextField error={tableRows[idx].err? true: false} disabled={tableRows[idx].err? true: false} label=\"Video url\" name=\"ip\" variant=\"outlined\" \n              value={tableRows[idx].ip} onChange={handleChange(idx)}/>\n          </TableCell>\n          <TableCell>\n            <TextField error={tableRows[idx].err? true: false} label=\"Name\" name=\"cam\" variant=\"outlined\" helperText={tableRows[idx].err?'Duplicate camera name':''} \n              value={tableRows[idx].cam} onChange={handleChange(idx)}/>\n          </TableCell>\n          <TableCell>\n            <FormControl className={classes.formControl}>\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                Type\n                </InputLabel>\n                <Select\n                labelId=\"demo-simple-select-placeholder-label-label\"\n                id=\"demo-simple-select-placeholder-label\"\n                value={age}\n                onChange={handleChange}\n                displayEmpty\n                className={classes.selectEmpty}\n                >\n                <MenuItem value=\"\">\n                    <em>None</em>\n                </MenuItem>\n                <MenuItem value={10}>Rtsp to Rtp</MenuItem>\n                <MenuItem value={20}>Rtsp to Rtsp</MenuItem>\n                </Select>\n                <FormHelperText>Select type of </FormHelperText>\n            </FormControl>\n          </TableCell>\n          <TableCell>\n           <Checkbox  indeterminate inputProps={{ 'aria-label': 'indeterminate checkbox' }}  checked={tableRows[idx].del} onChange={handleChecked(idx)}/>\n          </TableCell>\n        </TableRow>\n      )\n    })\n  }\n\n  return (\n    <div>\n      <Modal\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n       \n        <div style={modalStyle} className={classes.paper}>\n          <Typography variant=\"h4\" className={classes.title} >\n            Subscribe to IP Cameras\n          </Typography>\n          <Divider />\n          <br/>\n          <Button variant=\"contained\" color=\"primary\" onClick={connectSelectedCam}>\n            Connect\n          </Button>\n          <Button className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={deleteSelectedCam}>\n            Disconnect\n          </Button>\n          <br/>\n          <br/>\n          <TableContainer component={Paper} className={classes.container}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Video Url</TableCell>\n                  <TableCell>Port</TableCell>\n                  <TableCell>type</TableCell>\n                  <TableCell>Remove</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {renderTable()}\n              </TableBody>\n            </Table>\n          </TableContainer>\n            <br/>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleAddRow}>\n              Add Row\n            </Button>\n            <Button className={classes.btn} variant=\"outlined\" color=\"secondary\" onClick={handleRemoveRow}>\n              Delete Empty Rows\n            </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\nexport default IpcamServerComponent;"]},"metadata":{},"sourceType":"module"}