{"ast":null,"code":"import _classCallCheck from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'axios';import'./VideoRoomComponent.css';import{OpenVidu}from'openvidu-browser';import StreamComponent from'../stream/StreamComponent';import DialogExtensionComponent from'../dialog-extension/DialogExtension';import ChatComponent from'../chat/ChatComponent';import OpenViduLayout from'../../layout/openvidu-layout';import UserModel from'../../models/user-model';import ToolbarComponent from'../toolbar/ToolbarComponent';import IpCameraComponent from'../ip-camera/IpCameraComponent';import IpCamModel from'../../models/ipcam-model';import{config}from'../Constants';var localUser=new UserModel();var screen_share=require('../../assets/images/screen.png');var VideoRoomComponent=/*#__PURE__*/function(_Component){_inherits(VideoRoomComponent,_Component);var _super=_createSuper(VideoRoomComponent);function VideoRoomComponent(props){var _this;_classCallCheck(this,VideoRoomComponent);_this=_super.call(this,props);_this.OPENVIDU_SERVER_URL=config.OPENVIDU_SERVER_URL;_this.OPENVIDU_SERVER_SECRET=config.OPENVIDU_SERVER_SECRET;_this.hasBeenUpdated=false;_this.layout=new OpenViduLayout();var sessionName=_this.props.match.params.value.replace(/-/g,'');var userName=_this.props.user?_this.props.user:'IUDX_User'+Math.floor(Math.random()*100);_this.state={mySessionId:sessionName,myUserName:userName,session:undefined,localUser:undefined,subscribers:[],ipCamSubscribers:[],chatDisplay:'none',modalOpen:false,localUserOn:false,groupDisplay:true};_this.joinSession=_this.joinSession.bind(_assertThisInitialized(_this));_this.leaveSession=_this.leaveSession.bind(_assertThisInitialized(_this));_this.onbeforeunload=_this.onbeforeunload.bind(_assertThisInitialized(_this));_this.updateLayout=_this.updateLayout.bind(_assertThisInitialized(_this));_this.camStatusChanged=_this.camStatusChanged.bind(_assertThisInitialized(_this));_this.micStatusChanged=_this.micStatusChanged.bind(_assertThisInitialized(_this));_this.nicknameChanged=_this.nicknameChanged.bind(_assertThisInitialized(_this));_this.toggleFullscreen=_this.toggleFullscreen.bind(_assertThisInitialized(_this));_this.screenShare=_this.screenShare.bind(_assertThisInitialized(_this));_this.stopScreenShare=_this.stopScreenShare.bind(_assertThisInitialized(_this));_this.closeDialogExtension=_this.closeDialogExtension.bind(_assertThisInitialized(_this));_this.toggleChat=_this.toggleChat.bind(_assertThisInitialized(_this));_this.checkNotification=_this.checkNotification.bind(_assertThisInitialized(_this));_this.checkSize=_this.checkSize.bind(_assertThisInitialized(_this));_this.showIPCameraDialog=_this.showIPCameraDialog.bind(_assertThisInitialized(_this));_this.setClose=_this.setClose.bind(_assertThisInitialized(_this));_this.getIPToken=_this.getIPToken.bind(_assertThisInitialized(_this));_this.removeCamera=_this.removeCamera.bind(_assertThisInitialized(_this));_this.groupStatusChanged=_this.groupStatusChanged.bind(_assertThisInitialized(_this));_this.leaveSessionPage=_this.leaveSessionPage.bind(_assertThisInitialized(_this));return _this;}_createClass(VideoRoomComponent,[{key:\"componentDidMount\",value:function componentDidMount(){var openViduLayoutOptions={maxRatio:3/2,// The narrowest ratio that will be used (default 2x3)\nminRatio:9/16,// The widest ratio that will be used (default 16x9)\nfixedRatio:false,// If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\nbigClass:'OV_big',// The class to add to elements that should be sized bigger\nbigPercentage:0.8,// The maximum percentage of space the big ones should take up\nbigFixedRatio:false,// fixedRatio for the big ones\nbigMaxRatio:3/2,// The narrowest ratio to use for the big elements (default 2x3)\nbigMinRatio:9/16,// The widest ratio to use for the big elements (default 16x9)\nbigFirst:true,// Whether to place the big one in the top left (true) or bottom right\nanimate:true// Whether you want to animate the transitions\n};this.layout.initLayoutContainer(document.getElementById('layout'),openViduLayoutOptions);window.addEventListener('beforeunload',this.onbeforeunload);window.addEventListener('resize',this.updateLayout);window.addEventListener('resize',this.checkSize);this.joinSession();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('beforeunload',this.onbeforeunload);window.removeEventListener('resize',this.updateLayout);window.removeEventListener('resize',this.checkSize);this.leaveSession();}},{key:\"onbeforeunload\",value:function onbeforeunload(event){this.leaveSession();}},{key:\"joinSession\",value:function joinSession(){var _this2=this;this.OV=new OpenVidu();this.setState({session:this.OV.initSession()},function(){_this2.subscribeToStreamCreated();_this2.connectToSession();});}},{key:\"connectToSession\",value:function connectToSession(){var _this3=this;if(this.props.token!==undefined){console.log('token received: ',this.props.token);this.connect(this.props.token);}else{this.getToken().then(function(token){console.log(token);_this3.connect(token);}).catch(function(error){if(_this3.props.error){_this3.props.error({error:error.error,messgae:error.message,code:error.code,status:error.status});}console.log('There was an error getting the token:',error.code,error.message);alert('There was an error getting the token:',error.message);});}}},{key:\"connect\",value:function connect(token){var _this4=this;this.state.session.connect(token,{clientData:this.state.myUserName}).then(function(){_this4.connectWebCam();}).catch(function(error){if(_this4.props.error){_this4.props.error({error:error.error,messgae:error.message,code:error.code,status:error.status});}alert('There was an error connecting to the session:',error.message);console.log('There was an error connecting to the session:',error.code,error.message);});}},{key:\"connectWebCam\",value:function connectWebCam(){var _this5=this;var publisher=this.OV.initPublisher(undefined,{audioSource:undefined,videoSource:undefined,publishAudio:localUser.isAudioActive(),publishVideo:localUser.isVideoActive(),resolution:'640x480',frameRate:30,insertMode:'APPEND'});if(this.state.session.capabilities.publish){this.state.session.publish(publisher).then(function(){if(_this5.props.joinSession){_this5.props.joinSession();}});}localUser.setNickname(this.state.myUserName);localUser.setConnectionId(this.state.session.connection.connectionId);localUser.setScreenShareActive(false);localUser.setStreamManager(publisher);this.subscribeToUserChanged();this.subscribeToStreamDestroyed();this.sendSignalUserChanged({isScreenShareActive:localUser.isScreenShareActive()});this.setState({localUser:localUser},function(){_this5.state.localUser.getStreamManager().on('streamPlaying',function(e){_this5.updateLayout();publisher.videos[0].video.parentElement.classList.remove('custom-class');});});}},{key:\"leaveSession\",value:function leaveSession(e){var mySession=this.state.session;if(mySession){mySession.disconnect();}// Empty all properties...\nthis.OV=null;this.setState({session:undefined,subscribers:[],ipCamSubscribers:[],mySessionId:'SessionA',myUserName:'IUDX_User'+Math.floor(Math.random()*100),localUser:undefined,chatDisplay:'none',modalOpen:false,localUserOn:false,groupDisplay:true});localUser.setAudioActive(true);localUser.setVideoActive(false);localUser.setGroupActive(true);if(this.props.leaveSession){this.props.leaveSession();}}},{key:\"leaveSessionPage\",value:function leaveSessionPage(){this.props.history.goBack();}},{key:\"camStatusChanged\",value:function camStatusChanged(){localUser.setVideoActive(!localUser.isVideoActive());localUser.getStreamManager().publishVideo(localUser.isVideoActive());this.sendSignalUserChanged({isVideoActive:localUser.isVideoActive()});this.setState({localUser:localUser});this.setState({localUserOn:!this.state.localUserOn});}},{key:\"micStatusChanged\",value:function micStatusChanged(){localUser.setAudioActive(!localUser.isAudioActive());localUser.getStreamManager().publishAudio(localUser.isAudioActive());this.sendSignalUserChanged({isAudioActive:localUser.isAudioActive()});this.setState({localUser:localUser});}},{key:\"nicknameChanged\",value:function nicknameChanged(nickname){var localUser=this.state.localUser;localUser.setNickname(nickname);this.setState({localUser:localUser});this.sendSignalUserChanged({nickname:this.state.localUser.getNickname()});}},{key:\"deleteSubscriber\",value:function deleteSubscriber(stream){if(stream.typeOfVideo==='IPCAM'){var remoteCams=this.state.ipCamSubscribers;var camStream=remoteCams.filter(function(user){return user.getStreamManager().stream===stream;})[0];var index=remoteCams.indexOf(camStream,0);if(index>-1){remoteCams.splice(index,1);this.setState({ipCamSubscribers:remoteCams});}}else{var remoteUsers=this.state.subscribers;var userStream=remoteUsers.filter(function(user){return user.getStreamManager().stream===stream;})[0];var _index=remoteUsers.indexOf(userStream,0);if(_index>-1){remoteUsers.splice(_index,1);this.setState({subscribers:remoteUsers});}}}},{key:\"subscribeToStreamCreated\",value:function subscribeToStreamCreated(){var _this6=this;this.state.session.on('streamCreated',function(event){var subscriber=_this6.state.session.subscribe(event.stream,undefined);if(event.stream.typeOfVideo==='IPCAM'){var ipCamSubscribers=_this6.state.ipCamSubscribers;subscriber.on('streamPlaying',function(e){subscriber.videos[0].video.parentElement.classList.remove('custom-class');});var newCam=new IpCamModel();newCam.setStreamManager(subscriber);newCam.setConnectionId(event.stream.connection.connectionId);newCam.setType('ipcam');newCam.setNickname(event.stream.connection.data);ipCamSubscribers.push(newCam);_this6.setState({ipCamSubscribers:ipCamSubscribers},function(){if(_this6.state.localUser){_this6.sendSignalUserChanged({isAudioActive:_this6.state.localUser.isAudioActive(),isVideoActive:_this6.state.localUser.isVideoActive(),nickname:_this6.state.localUser.getNickname(),isScreenShareActive:_this6.state.localUser.isScreenShareActive()});}_this6.updateLayout();});}else{var subscribers=_this6.state.subscribers;subscriber.on('streamPlaying',function(e){_this6.checkSomeoneShareScreen();subscriber.videos[0].video.parentElement.classList.remove('custom-class');});var newUser=new UserModel();newUser.setStreamManager(subscriber);newUser.setConnectionId(event.stream.connection.connectionId);newUser.setType('remote');var nickname=event.stream.connection.data.split('%')[0];newUser.setNickname(JSON.parse(nickname).clientData);subscribers.push(newUser);_this6.setState({subscribers:subscribers},function(){if(_this6.state.localUser){_this6.sendSignalUserChanged({isAudioActive:_this6.state.localUser.isAudioActive(),isVideoActive:_this6.state.localUser.isVideoActive(),nickname:_this6.state.localUser.getNickname(),isScreenShareActive:_this6.state.localUser.isScreenShareActive()});}_this6.updateLayout();});}});}},{key:\"subscribeToStreamDestroyed\",value:function subscribeToStreamDestroyed(){var _this7=this;// On every Stream destroyed...\nthis.state.session.on('streamDestroyed',function(event){// Remove the stream from 'subscribers' array\n_this7.deleteSubscriber(event.stream);setTimeout(function(){_this7.checkSomeoneShareScreen();},20);event.preventDefault();_this7.updateLayout();});}},{key:\"subscribeToUserChanged\",value:function subscribeToUserChanged(){var _this8=this;this.state.session.on('signal:userChanged',function(event){var remoteUsers=_this8.state.subscribers;remoteUsers.forEach(function(user){if(user.getConnectionId()===event.from.connectionId){var data=JSON.parse(event.data);console.log('EVENTO REMOTE: ',event.data);if(data.isAudioActive!==undefined){user.setAudioActive(data.isAudioActive);}if(data.isVideoActive!==undefined){user.setVideoActive(data.isVideoActive);}if(data.nickname!==undefined){user.setNickname(data.nickname);}if(data.isScreenShareActive!==undefined){user.setScreenShareActive(data.isScreenShareActive);}}});_this8.setState({subscribers:remoteUsers},function(){return _this8.checkSomeoneShareScreen();});});}},{key:\"updateLayout\",value:function updateLayout(){var _this9=this;setTimeout(function(){_this9.layout.updateLayout();},20);}},{key:\"sendSignalUserChanged\",value:function sendSignalUserChanged(data){var signalOptions={data:JSON.stringify(data),type:'userChanged'};this.state.session.signal(signalOptions);}},{key:\"toggleFullscreen\",value:function toggleFullscreen(){var document=window.document;var fs=document.getElementById('container');if(!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&!document.msFullscreenElement){if(fs.requestFullscreen){fs.requestFullscreen();}else if(fs.msRequestFullscreen){fs.msRequestFullscreen();}else if(fs.mozRequestFullScreen){fs.mozRequestFullScreen();}else if(fs.webkitRequestFullscreen){fs.webkitRequestFullscreen();}}else{if(document.exitFullscreen){document.exitFullscreen();}else if(document.msExitFullscreen){document.msExitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}}}},{key:\"screenShare\",value:function screenShare(){var _this10=this;var videoSource=navigator.userAgent.indexOf('Firefox')!==-1?'window':'screen';var publisher=this.OV.initPublisher(undefined,{videoSource:videoSource,publishAudio:localUser.isAudioActive(),publishVideo:localUser.isVideoActive(),mirror:false},function(error){if(error&&error.name==='SCREEN_EXTENSION_NOT_INSTALLED'){_this10.setState({showExtensionDialog:true});}else if(error&&error.name==='SCREEN_SHARING_NOT_SUPPORTED'){alert('Your browser does not support screen sharing');}else if(error&&error.name==='SCREEN_EXTENSION_DISABLED'){alert('You need to enable screen sharing extension');}else if(error&&error.name==='SCREEN_CAPTURE_DENIED'){alert('You need to choose a window or application to share');}});publisher.once('accessAllowed',function(){_this10.state.session.unpublish(localUser.getStreamManager());localUser.setStreamManager(publisher);_this10.state.session.publish(localUser.getStreamManager()).then(function(){localUser.setScreenShareActive(true);_this10.setState({localUser:localUser},function(){_this10.sendSignalUserChanged({isScreenShareActive:localUser.isScreenShareActive()});});});});publisher.on('streamPlaying',function(){_this10.updateLayout();publisher.videos[0].video.parentElement.classList.remove('custom-class');});}},{key:\"closeDialogExtension\",value:function closeDialogExtension(){this.setState({showExtensionDialog:false});}},{key:\"stopScreenShare\",value:function stopScreenShare(){this.state.session.unpublish(localUser.getStreamManager());this.connectWebCam();}},{key:\"groupStatusChanged\",value:function groupStatusChanged(){localUser.setGroupActive(!this.state.groupDisplay);this.sendSignalUserChanged({isGroupActive:localUser.isGroupActive()});this.setState({groupDisplay:!this.state.groupDisplay});}},{key:\"checkSomeoneShareScreen\",value:function checkSomeoneShareScreen(){var isScreenShared;// return true if at least one passes the test\nisScreenShared=this.state.subscribers.some(function(user){return user.isScreenShareActive();})||localUser.isScreenShareActive();var openviduLayoutOptions={maxRatio:3/2,minRatio:9/16,fixedRatio:isScreenShared,bigClass:'OV_big',bigPercentage:0.8,bigFixedRatio:false,bigMaxRatio:3/2,bigMinRatio:9/16,bigFirst:true,animate:true};this.layout.setLayoutOptions(openviduLayoutOptions);this.updateLayout();}},{key:\"toggleChat\",value:function toggleChat(property){var display=property;if(display===undefined){display=this.state.chatDisplay==='none'?'block':'none';}if(display==='block'){this.setState({chatDisplay:display,messageReceived:false});}else{console.log('chat',display);this.setState({chatDisplay:display});}this.updateLayout();}},{key:\"checkNotification\",value:function checkNotification(event){this.setState({messageReceived:this.state.chatDisplay==='none'});}},{key:\"checkSize\",value:function checkSize(){if(document.getElementById('layout').offsetWidth<=700&&!this.hasBeenUpdated){this.toggleChat('none');this.hasBeenUpdated=true;}if(document.getElementById('layout').offsetWidth>700&&this.hasBeenUpdated){this.hasBeenUpdated=false;}}},{key:\"showIPCameraDialog\",value:function showIPCameraDialog(){this.setState({modalOpen:!this.state.modalOpen});}},{key:\"setClose\",value:function setClose(){this.setState({modalOpen:!this.state.modalOpen});}},{key:\"render\",value:function render(){var mySessionId=this.state.mySessionId;var localUser=this.state.localUser;var chatDisplay={display:this.state.chatDisplay};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\",id:\"container\"},/*#__PURE__*/React.createElement(ToolbarComponent,{sessionId:mySessionId,user:localUser,showNotification:this.state.messageReceived,camStatusChanged:this.camStatusChanged,micStatusChanged:this.micStatusChanged,groupStatusChanged:this.groupStatusChanged,screenShare:this.screenShare,stopScreenShare:this.stopScreenShare,toggleFullscreen:this.toggleFullscreen,leaveSessionPage:this.leaveSessionPage,toggleChat:this.toggleChat,showIPCameraDialog:this.showIPCameraDialog}),/*#__PURE__*/React.createElement(DialogExtensionComponent,{showDialog:this.state.showExtensionDialog,cancelClicked:this.closeDialogExtension}),/*#__PURE__*/React.createElement(IpCameraComponent,{open:this.state.modalOpen,setClose:this.setClose,getToken:this.getIPToken,removeCam:this.removeCamera}),/*#__PURE__*/React.createElement(\"div\",{id:\"layout\",className:\"bounds\"},this.state.localUserOn&&localUser!==undefined&&localUser.getStreamManager()!==undefined&&(localUser.isScreenShareActive()?/*#__PURE__*/React.createElement(\"div\",{id:\"screenshare\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"img\",{alt:\"Screen Sharing\",src:screen_share})),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"You're presenting to everyone\")))):/*#__PURE__*/React.createElement(\"div\",{className:\"OT_root OT_publisher custom-class\",id:\"localUser\"},/*#__PURE__*/React.createElement(StreamComponent,{user:localUser,handleNickname:this.nicknameChanged}))),this.state.groupDisplay&&this.state.subscribers.map(function(sub,i){return/*#__PURE__*/React.createElement(\"div\",{key:i,className:\"OT_root OT_publisher custom-class\",id:\"remoteUsers\"},/*#__PURE__*/React.createElement(StreamComponent,{user:sub,streamId:sub.streamManager.stream.streamId}));}),this.state.ipCamSubscribers.map(function(sub,i){return/*#__PURE__*/React.createElement(\"div\",{key:i,className:\"OT_root OT_publisher custom-class\",id:\"remoteCam\"},/*#__PURE__*/React.createElement(StreamComponent,{user:sub,streamId:sub.streamManager.stream.streamId}));}),localUser!==undefined&&localUser.getStreamManager()!==undefined&&/*#__PURE__*/React.createElement(\"div\",{className:\"OT_root OT_publisher custom-class\",style:chatDisplay},/*#__PURE__*/React.createElement(ChatComponent,{user:localUser,chatDisplay:this.state.chatDisplay,close:this.toggleChat,messageReceived:this.checkNotification}))));}/**\n     * --------------------------\n     * SERVER-SIDE RESPONSIBILITY\n     * --------------------------\n     * These methods retrieve the mandatory user token from OpenVidu Server.\n     * This behaviour MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\n     * the API REST, openvidu-java-client or openvidu-node-client):\n     *   1) Initialize a session in OpenVidu Server\t(POST /api/sessions)\n     *   2) Generate a token in OpenVidu Server\t\t(POST /api/tokens)\n     *   3) The token must be consumed in Session.connect() method\n     */},{key:\"getIPToken\",value:function getIPToken(cameras){var sendData={session:this.state.mySessionId,cameras:cameras};var headers={'Content-Type':'application/json'};axios.post('/ipcam',sendData,{headers}).then(function(response){console.log('connection success!');}).catch(function(error){return console.log(error);});}},{key:\"removeCamera\",value:function removeCamera(camName){var sendData={session:this.state.mySessionId,camera:camName};var headers={'Content-Type':'application/json'};axios.post('/deleteipcam',sendData,{headers}).then(function(response){console.log('Disconnection success!');}).catch(function(error){return console.log(error);});}},{key:\"getToken\",value:function getToken(){var _this11=this;return this.createSession(this.state.mySessionId).then(function(sessionId){return _this11.createToken(sessionId);});}},{key:\"createSession\",value:function createSession(sessionId){var _this12=this;return new Promise(function(resolve,reject){var data=JSON.stringify({customSessionId:sessionId});axios.post(_this12.OPENVIDU_SERVER_URL+'/openvidu/api/sessions',data,{headers:{Authorization:'Basic '+btoa('OPENVIDUAPP:'+_this12.OPENVIDU_SERVER_SECRET),'Content-Type':'application/json'}}).then(function(response){console.log('CREATE SESION',response);resolve(response.data.id);}).catch(function(response){var error=Object.assign({},response);if(error.response&&error.response.status===409){resolve(sessionId);}else{console.log(error);console.warn('No connection to OpenVidu Server. This may be a certificate error at '+_this12.OPENVIDU_SERVER_URL);if(window.confirm('No connection to OpenVidu Server. This may be a certificate error at \"'+_this12.OPENVIDU_SERVER_URL+'\"\\n\\nClick OK to navigate and accept it. '+'If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"'+_this12.OPENVIDU_SERVER_URL+'\"')){window.location.assign(_this12.OPENVIDU_SERVER_URL+'/accept-certificate');}}});});}},{key:\"createToken\",value:function createToken(sessionId){var _this13=this;return new Promise(function(resolve,reject){var data=JSON.stringify({});axios.post(_this13.OPENVIDU_SERVER_URL+'/openvidu/api/sessions/'+sessionId+'/connection',data,{headers:{Authorization:'Basic '+btoa('OPENVIDUAPP:'+_this13.OPENVIDU_SERVER_SECRET),'Content-Type':'application/json'}}).then(function(response){console.log('TOKEN',response);resolve(response.data.token);}).catch(function(error){return reject(error);});});}}]);return VideoRoomComponent;}(Component);export{VideoRoomComponent as default};","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core/client/src/components/video-room/VideoRoomComponent.js"],"names":["React","Component","axios","OpenVidu","StreamComponent","DialogExtensionComponent","ChatComponent","OpenViduLayout","UserModel","ToolbarComponent","IpCameraComponent","IpCamModel","config","localUser","screen_share","require","VideoRoomComponent","props","OPENVIDU_SERVER_URL","OPENVIDU_SERVER_SECRET","hasBeenUpdated","layout","sessionName","match","params","value","replace","userName","user","Math","floor","random","state","mySessionId","myUserName","session","undefined","subscribers","ipCamSubscribers","chatDisplay","modalOpen","localUserOn","groupDisplay","joinSession","bind","leaveSession","onbeforeunload","updateLayout","camStatusChanged","micStatusChanged","nicknameChanged","toggleFullscreen","screenShare","stopScreenShare","closeDialogExtension","toggleChat","checkNotification","checkSize","showIPCameraDialog","setClose","getIPToken","removeCamera","groupStatusChanged","leaveSessionPage","openViduLayoutOptions","maxRatio","minRatio","fixedRatio","bigClass","bigPercentage","bigFixedRatio","bigMaxRatio","bigMinRatio","bigFirst","animate","initLayoutContainer","document","getElementById","window","addEventListener","removeEventListener","event","OV","setState","initSession","subscribeToStreamCreated","connectToSession","token","console","log","connect","getToken","then","catch","error","messgae","message","code","status","alert","clientData","connectWebCam","publisher","initPublisher","audioSource","videoSource","publishAudio","isAudioActive","publishVideo","isVideoActive","resolution","frameRate","insertMode","capabilities","publish","setNickname","setConnectionId","connection","connectionId","setScreenShareActive","setStreamManager","subscribeToUserChanged","subscribeToStreamDestroyed","sendSignalUserChanged","isScreenShareActive","getStreamManager","on","e","videos","video","parentElement","classList","remove","mySession","disconnect","setAudioActive","setVideoActive","setGroupActive","history","goBack","nickname","getNickname","stream","typeOfVideo","remoteCams","camStream","filter","index","indexOf","splice","remoteUsers","userStream","subscriber","subscribe","newCam","setType","data","push","checkSomeoneShareScreen","newUser","split","JSON","parse","deleteSubscriber","setTimeout","preventDefault","forEach","getConnectionId","from","signalOptions","stringify","type","signal","fs","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","navigator","userAgent","mirror","name","showExtensionDialog","once","unpublish","isGroupActive","isScreenShared","some","openviduLayoutOptions","setLayoutOptions","property","display","messageReceived","offsetWidth","map","sub","i","streamManager","streamId","cameras","sendData","headers","post","response","camName","camera","createSession","sessionId","createToken","Promise","resolve","reject","customSessionId","Authorization","btoa","id","Object","assign","warn","confirm","location"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './VideoRoomComponent.css';\nimport { OpenVidu } from 'openvidu-browser';\nimport StreamComponent from '../stream/StreamComponent';\nimport DialogExtensionComponent from '../dialog-extension/DialogExtension';\nimport ChatComponent from '../chat/ChatComponent';\nimport OpenViduLayout from '../../layout/openvidu-layout';\nimport UserModel from '../../models/user-model';\nimport ToolbarComponent from '../toolbar/ToolbarComponent';\nimport IpCameraComponent from '../ip-camera/IpCameraComponent';\nimport IpCamModel from '../../models/ipcam-model';\nimport { config } from '../Constants';\n\nvar localUser = new UserModel();\n\nconst screen_share = require('../../assets/images/screen.png')\n\nexport default class VideoRoomComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.OPENVIDU_SERVER_URL = config.OPENVIDU_SERVER_URL;\n        this.OPENVIDU_SERVER_SECRET = config.OPENVIDU_SERVER_SECRET;\n        this.hasBeenUpdated = false;\n        this.layout = new OpenViduLayout();\n        let sessionName = this.props.match.params.value.replace(/-/g, '');\n        let userName = this.props.user ? this.props.user : 'IUDX_User' + Math.floor(Math.random() * 100);\n        this.state = {\n            mySessionId: sessionName,\n            myUserName: userName,\n            session: undefined,\n            localUser: undefined,\n            subscribers: [],\n            ipCamSubscribers: [],\n            chatDisplay: 'none',\n            modalOpen:false,\n            localUserOn: false,\n            groupDisplay: true,\n        };\n\n        this.joinSession = this.joinSession.bind(this);\n        this.leaveSession = this.leaveSession.bind(this);\n        this.onbeforeunload = this.onbeforeunload.bind(this);\n        this.updateLayout = this.updateLayout.bind(this);\n        this.camStatusChanged = this.camStatusChanged.bind(this);\n        this.micStatusChanged = this.micStatusChanged.bind(this);\n        this.nicknameChanged = this.nicknameChanged.bind(this);\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\n        this.screenShare = this.screenShare.bind(this);\n        this.stopScreenShare = this.stopScreenShare.bind(this);\n        this.closeDialogExtension = this.closeDialogExtension.bind(this);\n        this.toggleChat = this.toggleChat.bind(this);\n        this.checkNotification = this.checkNotification.bind(this);\n        this.checkSize = this.checkSize.bind(this);\n        this.showIPCameraDialog = this.showIPCameraDialog.bind(this);\t\n        this.setClose = this.setClose.bind(this);\n        this.getIPToken = this.getIPToken.bind(this);\n        this.removeCamera = this.removeCamera.bind(this);\n        this.groupStatusChanged = this.groupStatusChanged.bind(this);\n        this.leaveSessionPage = this.leaveSessionPage.bind(this);\n    }\n\n    componentDidMount() {\n        const openViduLayoutOptions = {\n            maxRatio: 3 / 2, // The narrowest ratio that will be used (default 2x3)\n            minRatio: 9 / 16, // The widest ratio that will be used (default 16x9)\n            fixedRatio: false, // If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\n            bigClass: 'OV_big', // The class to add to elements that should be sized bigger\n            bigPercentage: 0.8, // The maximum percentage of space the big ones should take up\n            bigFixedRatio: false, // fixedRatio for the big ones\n            bigMaxRatio: 3 / 2, // The narrowest ratio to use for the big elements (default 2x3)\n            bigMinRatio: 9 / 16, // The widest ratio to use for the big elements (default 16x9)\n            bigFirst: true, // Whether to place the big one in the top left (true) or bottom right\n            animate: true, // Whether you want to animate the transitions\n        };\n\n        this.layout.initLayoutContainer(document.getElementById('layout'), openViduLayoutOptions);\n        window.addEventListener('beforeunload', this.onbeforeunload);\n        window.addEventListener('resize', this.updateLayout);\n        window.addEventListener('resize', this.checkSize);\n        this.joinSession();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.onbeforeunload);\n        window.removeEventListener('resize', this.updateLayout);\n        window.removeEventListener('resize', this.checkSize);\n        this.leaveSession();\n    }\n\n    onbeforeunload(event) {\n        this.leaveSession();\n    }\n\n    joinSession() {\n        this.OV = new OpenVidu();\n\n        this.setState(\n            {\n                session: this.OV.initSession(),\n            },\n            () => {\n                this.subscribeToStreamCreated();\n\n                this.connectToSession();\n            },\n        );\n    }\n\n    connectToSession() {\n        if (this.props.token !== undefined) {\n            console.log('token received: ', this.props.token);\n            this.connect(this.props.token);\n        } else {\n            this.getToken().then((token) => {\n                console.log(token);\n                this.connect(token);\n            }).catch((error) => {\n                if(this.props.error){\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\n                }\n                console.log('There was an error getting the token:', error.code, error.message);\n                alert('There was an error getting the token:', error.message);\n              });\n        }\n    }\n\n    connect(token) {\n        this.state.session\n            .connect(\n                token,\n                { clientData: this.state.myUserName },\n            )\n            .then(() => {\n                this.connectWebCam();\n            })\n            .catch((error) => {\n                if(this.props.error){\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\n                }\n                alert('There was an error connecting to the session:', error.message);\n                console.log('There was an error connecting to the session:', error.code, error.message);\n            });\n    }\n\n    connectWebCam() {\n        let publisher = this.OV.initPublisher(undefined, {\n            audioSource: undefined,\n            videoSource: undefined,\n            publishAudio: localUser.isAudioActive(),\n            publishVideo: localUser.isVideoActive(),\n            resolution: '640x480',\n            frameRate: 30,\n            insertMode: 'APPEND',\n        });\n\n        if (this.state.session.capabilities.publish) {\n            this.state.session.publish(publisher).then(() => {\n                if (this.props.joinSession) {\n                    this.props.joinSession();\n                }\n            });\n        }\n        localUser.setNickname(this.state.myUserName);\n        localUser.setConnectionId(this.state.session.connection.connectionId);\n        localUser.setScreenShareActive(false);\n        localUser.setStreamManager(publisher);\n        this.subscribeToUserChanged();\n        this.subscribeToStreamDestroyed();\n        this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\n\n        this.setState({ localUser: localUser }, () => {\n            this.state.localUser.getStreamManager().on('streamPlaying', (e) => {\n                this.updateLayout();\n                publisher.videos[0].video.parentElement.classList.remove('custom-class');\n            });\n        });\n    }\n\n    leaveSession(e) {\n        const mySession = this.state.session;\n\n        if (mySession) {\n            mySession.disconnect();\n        }\n\n        // Empty all properties...\n        this.OV = null;\n        this.setState({\n            session: undefined,\n            subscribers: [],\n            ipCamSubscribers: [],\n            mySessionId: 'SessionA',\n            myUserName: 'IUDX_User' + Math.floor(Math.random() * 100),\n            localUser: undefined,\n            chatDisplay: 'none',\n            modalOpen: false,\n            localUserOn: false,\n            groupDisplay: true,\n        });\n        localUser.setAudioActive(true);\n        localUser.setVideoActive(false);\n        localUser.setGroupActive(true);\n        if (this.props.leaveSession) {\n            this.props.leaveSession();\n        }   \n    }\n\n    leaveSessionPage() {\n        this.props.history.goBack();\n    }\n\n    camStatusChanged() {\n        localUser.setVideoActive(!localUser.isVideoActive());\n        localUser.getStreamManager().publishVideo(localUser.isVideoActive());\n        this.sendSignalUserChanged({ isVideoActive: localUser.isVideoActive() });\n        this.setState({ localUser: localUser });\n        this.setState({ localUserOn: !this.state.localUserOn})\n    }\n\n    micStatusChanged() {\n        localUser.setAudioActive(!localUser.isAudioActive());\n        localUser.getStreamManager().publishAudio(localUser.isAudioActive());\n        this.sendSignalUserChanged({ isAudioActive: localUser.isAudioActive() });\n        this.setState({ localUser: localUser });\n    }\n\n    nicknameChanged(nickname) {\n        let localUser = this.state.localUser;\n        localUser.setNickname(nickname);\n        this.setState({ localUser: localUser });\n        this.sendSignalUserChanged({ nickname: this.state.localUser.getNickname() });\n    }\n\n    deleteSubscriber(stream) {\n        if(stream.typeOfVideo === 'IPCAM') {\n            const remoteCams = this.state.ipCamSubscribers;\n            const camStream = remoteCams.filter((user) => user.getStreamManager().stream === stream)[0];\n            let index = remoteCams.indexOf(camStream, 0);\n            if (index > -1) {\n                remoteCams.splice(index, 1);\n                this.setState({\n                    ipCamSubscribers: remoteCams,\n                });\n            }\n        }\n        else {\n            const remoteUsers = this.state.subscribers;\n            const userStream = remoteUsers.filter((user) => user.getStreamManager().stream === stream)[0];\n            let index = remoteUsers.indexOf(userStream, 0);\n            if (index > -1) {\n                remoteUsers.splice(index, 1);\n                this.setState({\n                    subscribers: remoteUsers,\n                });\n            }\n        }\n    }\n\n    subscribeToStreamCreated() {\n        this.state.session.on('streamCreated', (event) => {\n            const subscriber = this.state.session.subscribe(event.stream, undefined);\n            \n            if(event.stream.typeOfVideo === 'IPCAM') {\n                var ipCamSubscribers = this.state.ipCamSubscribers;\n                subscriber.on('streamPlaying', (e) => {\n                    subscriber.videos[0].video.parentElement.classList.remove('custom-class');\n                });\n                const newCam = new IpCamModel();\n                newCam.setStreamManager(subscriber);\n                newCam.setConnectionId(event.stream.connection.connectionId);\n                newCam.setType('ipcam');\n                newCam.setNickname(event.stream.connection.data);\n                ipCamSubscribers.push(newCam);\n                this.setState(\n                    {\n                        ipCamSubscribers: ipCamSubscribers,\n                    },\n                    () => {\n                        if (this.state.localUser) {\n                            this.sendSignalUserChanged({\n                                isAudioActive: this.state.localUser.isAudioActive(),\n                                isVideoActive: this.state.localUser.isVideoActive(),\n                                nickname: this.state.localUser.getNickname(),\n                                isScreenShareActive: this.state.localUser.isScreenShareActive(),\n                            });\n                        }\n                        this.updateLayout();\n                    },\n                );\n            }\n            else {\n                var subscribers = this.state.subscribers;\n                subscriber.on('streamPlaying', (e) => {\n                    this.checkSomeoneShareScreen();\n                    subscriber.videos[0].video.parentElement.classList.remove('custom-class');\n                });\n                const newUser = new UserModel();\n                newUser.setStreamManager(subscriber);\n                newUser.setConnectionId(event.stream.connection.connectionId);\n                newUser.setType('remote');\n                var nickname = event.stream.connection.data.split('%')[0];\n                newUser.setNickname(JSON.parse(nickname).clientData);\n                subscribers.push(newUser);\n                this.setState(\n                    {\n                        subscribers: subscribers,\n                    },\n                    () => {\n                        if (this.state.localUser) {\n                            this.sendSignalUserChanged({\n                                isAudioActive: this.state.localUser.isAudioActive(),\n                                isVideoActive: this.state.localUser.isVideoActive(),\n                                nickname: this.state.localUser.getNickname(),\n                                isScreenShareActive: this.state.localUser.isScreenShareActive(),\n                            });\n                        }\n                        this.updateLayout();\n                    },\n                );\n            }\n        });\n    }\n\n    subscribeToStreamDestroyed() {\n        // On every Stream destroyed...\n        this.state.session.on('streamDestroyed', (event) => {\n            // Remove the stream from 'subscribers' array\n            this.deleteSubscriber(event.stream);\n            setTimeout(() => {\n                this.checkSomeoneShareScreen();\n            }, 20);\n            event.preventDefault();\n            this.updateLayout();\n        });\n    }\n\n    subscribeToUserChanged() {\n        this.state.session.on('signal:userChanged', (event) => {\n            let remoteUsers = this.state.subscribers;\n            remoteUsers.forEach((user) => {\n                if (user.getConnectionId() === event.from.connectionId) {\n                    const data = JSON.parse(event.data);\n                    console.log('EVENTO REMOTE: ', event.data);\n                    if (data.isAudioActive !== undefined) {\n                        user.setAudioActive(data.isAudioActive);\n                    }\n                    if (data.isVideoActive !== undefined) {\n                        user.setVideoActive(data.isVideoActive);\n                    }\n                    if (data.nickname !== undefined) {\n                        user.setNickname(data.nickname);\n                    }\n                    if (data.isScreenShareActive !== undefined) {\n                        user.setScreenShareActive(data.isScreenShareActive);\n                    }\n                }\n            });\n            this.setState(\n                {\n                    subscribers: remoteUsers,\n                },\n                () => this.checkSomeoneShareScreen(),\n            );\n        });\n    }\n\n    updateLayout() {\n        setTimeout(() => {\n            this.layout.updateLayout();\n        }, 20);\n    }\n\n    sendSignalUserChanged(data) {\n        const signalOptions = {\n            data: JSON.stringify(data),\n            type: 'userChanged',\n        };\n        this.state.session.signal(signalOptions);\n    }\n\n    toggleFullscreen() {\n        const document = window.document;\n        const fs = document.getElementById('container');\n        if (\n            !document.fullscreenElement &&\n            !document.mozFullScreenElement &&\n            !document.webkitFullscreenElement &&\n            !document.msFullscreenElement\n        ) {\n            if (fs.requestFullscreen) {\n                fs.requestFullscreen();\n            } else if (fs.msRequestFullscreen) {\n                fs.msRequestFullscreen();\n            } else if (fs.mozRequestFullScreen) {\n                fs.mozRequestFullScreen();\n            } else if (fs.webkitRequestFullscreen) {\n                fs.webkitRequestFullscreen();\n            }\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            }\n        }\n    }\n\n    screenShare() {\n        const videoSource = navigator.userAgent.indexOf('Firefox') !== -1 ? 'window' : 'screen';\n        const publisher = this.OV.initPublisher(\n            undefined,\n            {\n                videoSource: videoSource,\n                publishAudio: localUser.isAudioActive(),\n                publishVideo: localUser.isVideoActive(),\n                mirror: false,\n            },\n            (error) => {\n                if (error && error.name === 'SCREEN_EXTENSION_NOT_INSTALLED') {\n                    this.setState({ showExtensionDialog: true });\n                } else if (error && error.name === 'SCREEN_SHARING_NOT_SUPPORTED') {\n                    alert('Your browser does not support screen sharing');\n                } else if (error && error.name === 'SCREEN_EXTENSION_DISABLED') {\n                    alert('You need to enable screen sharing extension');\n                } else if (error && error.name === 'SCREEN_CAPTURE_DENIED') {\n                    alert('You need to choose a window or application to share');\n                }\n            },\n        );\n\n        publisher.once('accessAllowed', () => {\n            this.state.session.unpublish(localUser.getStreamManager());\n            localUser.setStreamManager(publisher);\n            this.state.session.publish(localUser.getStreamManager()).then(() => {\n                localUser.setScreenShareActive(true);\n                this.setState({ localUser: localUser }, () => {\n                    this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\n                });\n            });\n        });\n        publisher.on('streamPlaying', () => {\n            this.updateLayout();\n            publisher.videos[0].video.parentElement.classList.remove('custom-class');\n        });\n    }\n\n    closeDialogExtension() {\n        this.setState({ showExtensionDialog: false });\n    }\n\n    stopScreenShare() {\n        this.state.session.unpublish(localUser.getStreamManager());\n        this.connectWebCam();\n    }\n\n    groupStatusChanged() {\n        localUser.setGroupActive(!this.state.groupDisplay);\n        this.sendSignalUserChanged({ isGroupActive: localUser.isGroupActive() });\n        this.setState({ groupDisplay: !this.state.groupDisplay });\n    }\n\n    checkSomeoneShareScreen() {\n        let isScreenShared;\n        // return true if at least one passes the test\n        isScreenShared = this.state.subscribers.some((user) => user.isScreenShareActive()) || localUser.isScreenShareActive();\n        const openviduLayoutOptions = {\n            maxRatio: 3 / 2,\n            minRatio: 9 / 16,\n            fixedRatio: isScreenShared,\n            bigClass: 'OV_big',\n            bigPercentage: 0.8,\n            bigFixedRatio: false,\n            bigMaxRatio: 3 / 2,\n            bigMinRatio: 9 / 16,\n            bigFirst: true,\n            animate: true,\n        };\n        this.layout.setLayoutOptions(openviduLayoutOptions);\n        this.updateLayout();\n    }\n\n    toggleChat(property) {\n        let display = property;\n\n        if (display === undefined) {\n            display = this.state.chatDisplay === 'none' ? 'block' : 'none';\n        }\n        if (display === 'block') {\n            this.setState({ chatDisplay: display, messageReceived: false });\n        } else {\n            console.log('chat', display);\n            this.setState({ chatDisplay: display });\n        }\n        this.updateLayout();\n    }\n\n    checkNotification(event) {\n        this.setState({\n            messageReceived: this.state.chatDisplay === 'none',\n        });\n    }\n\n    checkSize() {\n        if (document.getElementById('layout').offsetWidth <= 700 && !this.hasBeenUpdated) {\n            this.toggleChat('none');\n            this.hasBeenUpdated = true;\n        }\n        if (document.getElementById('layout').offsetWidth > 700 && this.hasBeenUpdated) {\n            this.hasBeenUpdated = false;\n        }\n    }\n\n    showIPCameraDialog(){\n        this.setState({modalOpen:!this.state.modalOpen});\n    }\n       \n    setClose(){\n        this.setState({modalOpen:!this.state.modalOpen});\n    }\n\n    render() {\n        const mySessionId = this.state.mySessionId;\n        const localUser = this.state.localUser;\n        var chatDisplay = { display: this.state.chatDisplay };\n\n        return (\n            <div className=\"container\" id=\"container\">\n                <ToolbarComponent\n                    sessionId={mySessionId}\n                    user={localUser}\n                    showNotification={this.state.messageReceived}\n                    camStatusChanged={this.camStatusChanged}\n                    micStatusChanged={this.micStatusChanged}\n                    groupStatusChanged={this.groupStatusChanged}\n                    screenShare={this.screenShare}\n                    stopScreenShare={this.stopScreenShare}\n                    toggleFullscreen={this.toggleFullscreen}\n                    leaveSessionPage={this.leaveSessionPage}\n                    toggleChat={this.toggleChat}\n                    showIPCameraDialog= {this.showIPCameraDialog}\n                />\n\n                <DialogExtensionComponent showDialog={this.state.showExtensionDialog} cancelClicked={this.closeDialogExtension} />\n                <IpCameraComponent open={this.state.modalOpen} setClose={this.setClose} getToken={this.getIPToken} removeCam={this.removeCamera}/>\n                \n                <div id=\"layout\" className=\"bounds\">\n                    {this.state.localUserOn && localUser !== undefined && localUser.getStreamManager() !== undefined && (\n                        localUser.isScreenShareActive() ? (\n                            <div id=\"screenshare\">\n                                <ul>\n                                    <li><img alt=\"Screen Sharing\" src={screen_share} /></li>\n                                    <li><h1>You're presenting to everyone</h1></li>\n                                </ul>\n                            </div>\n                        ) : (\n                            <div className=\"OT_root OT_publisher custom-class\" id=\"localUser\">\n                                <StreamComponent user={localUser} handleNickname={this.nicknameChanged} />\n                            </div>\n                        )\n                    )}\n                    {this.state.groupDisplay && this.state.subscribers.map((sub, i) => (\n                        <div key={i} className=\"OT_root OT_publisher custom-class\" id=\"remoteUsers\">\n                            <StreamComponent user={sub} streamId={sub.streamManager.stream.streamId} />\n                        </div>\n                    ))}\n                    {this.state.ipCamSubscribers.map((sub, i) => (\t\n                        <div key={i} className=\"OT_root OT_publisher custom-class\" id=\"remoteCam\">\n                            <StreamComponent user={sub} streamId={sub.streamManager.stream.streamId} />\n                        </div>\t\n                    ))}\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\n                        <div className=\"OT_root OT_publisher custom-class\" style={chatDisplay}>\n                            <ChatComponent\n                                user={localUser}\n                                chatDisplay={this.state.chatDisplay}\n                                close={this.toggleChat}\n                                messageReceived={this.checkNotification}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * --------------------------\n     * SERVER-SIDE RESPONSIBILITY\n     * --------------------------\n     * These methods retrieve the mandatory user token from OpenVidu Server.\n     * This behaviour MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\n     * the API REST, openvidu-java-client or openvidu-node-client):\n     *   1) Initialize a session in OpenVidu Server\t(POST /api/sessions)\n     *   2) Generate a token in OpenVidu Server\t\t(POST /api/tokens)\n     *   3) The token must be consumed in Session.connect() method\n     */\n    \n    getIPToken(cameras) {\n\n        const sendData = {\n            session: this.state.mySessionId,\n            cameras: cameras\n        };\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n        axios\n            .post('/ipcam', sendData, { headers })\n            .then((response) => {\n                console.log('connection success!');\n            })\n            .catch((error) => console.log(error))\n    }\n\n    removeCamera(camName) {\n\n        const sendData = { \n            session: this.state.mySessionId,\n            camera : camName \n        };\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n        axios\n            .post('/deleteipcam', sendData, { headers })\n            .then((response) => {\n                console.log('Disconnection success!');\n            })\n            .catch((error) => console.log(error))\n    }\n\n    getToken() {\n        return this.createSession(this.state.mySessionId).then((sessionId) => this.createToken(sessionId));\n    }\n\n    createSession(sessionId) {\n        return new Promise((resolve, reject) => {\n            var data = JSON.stringify({ customSessionId: sessionId });\n            axios\n                .post(this.OPENVIDU_SERVER_URL + '/openvidu/api/sessions', data, {\n                    headers: {\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + this.OPENVIDU_SERVER_SECRET),\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then((response) => {\n                    console.log('CREATE SESION', response);\n                    resolve(response.data.id);\n                })\n                .catch((response) => {\n                    var error = Object.assign({}, response);\n                    if (error.response && error.response.status === 409) {\n                        resolve(sessionId);\n                    } else {\n                        console.log(error);\n                        console.warn(\n                            'No connection to OpenVidu Server. This may be a certificate error at ' + this.OPENVIDU_SERVER_URL,\n                        );\n                        if (\n                            window.confirm(\n                                'No connection to OpenVidu Server. This may be a certificate error at \"' +\n                                    this.OPENVIDU_SERVER_URL +\n                                    '\"\\n\\nClick OK to navigate and accept it. ' +\n                                    'If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"' +\n                                    this.OPENVIDU_SERVER_URL +\n                                    '\"',\n                            )\n                        ) {\n                            window.location.assign(this.OPENVIDU_SERVER_URL + '/accept-certificate');\n                        }\n                    }\n                });\n        });\n    }\n\n    createToken(sessionId) {\n        return new Promise((resolve, reject) => {\n            var data = JSON.stringify({});\n            axios\n                .post(this.OPENVIDU_SERVER_URL + '/openvidu/api/sessions/' + sessionId + '/connection', data, {\n                    headers: {\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + this.OPENVIDU_SERVER_SECRET),\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then((response) => {\n                    console.log('TOKEN', response);\n                    resolve(response.data.token);\n                })\n                .catch((error) => reject(error));\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}