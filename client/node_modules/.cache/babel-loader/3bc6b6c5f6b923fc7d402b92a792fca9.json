{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import Modal from'@material-ui/core/Modal';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import Divider from\"@material-ui/core/Divider\";import Typography from'@material-ui/core/Typography';import Checkbox from'@material-ui/core/Checkbox';function getModalStyle(){var top=50;var left=50;return{top:\"\".concat(top,\"%\"),left:\"\".concat(left,\"%\"),transform:\"translate(-\".concat(top,\"%, -\").concat(left,\"%)\")};}var useStyles=makeStyles(function(theme){return{paper:{outline:'none',position:'absolute',width:700,backgroundColor:theme.palette.background.paper,padding:theme.spacing(4,4,4)},container:{maxHeight:400},btn:{marginLeft:30},title:_objectSpread(_objectSpread({display:\"flex\",alignItems:\"center\",padding:theme.spacing(0,1)},theme.mixins.toolbar),{},{justifyContent:\"flex-start\"})};});// assigning unique id for each camera\nvar rowId=4;// contains already connected cameras  \nvar connectedCameras=[];var IpCameraComponent=function IpCameraComponent(props){var classes=useStyles();// getModalStyle is not a pure function, we roll the style only on the first render\nvar _useState=useState(getModalStyle),_useState2=_slicedToArray(_useState,1),modalStyle=_useState2[0];// newly added cameras will go into tableRows\nvar _useState3=useState([{id:0,cam:'Russian building',ip:'rtsp://195.46.114.132/live/ch00_0',del:false,err:false},{id:1,cam:'Wickenburg, Arizona',ip:'rtsp://98.163.61.242/live/ch00_0',del:false,err:false},{id:2,cam:'City',ip:'rtsp://91.191.213.49:554/live_mpeg4.sdp',del:false,err:false}// {id:3, cam:'Hessdalen', ip:'rtsp://freja.hiof.no:1935/rtplive/definst/hessdalen03.stream', del:false, err:false}\n]),_useState4=_slicedToArray(_useState3,2),tableRows=_useState4[0],setTableRows=_useState4[1];// deleted cameras is stored in this variable\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),deleteCam=_useState6[0],setDeleteCam=_useState6[1];var handleClose=function handleClose(){props.setClose();};// function to handle checkbox onchecked validation\nvar handleChecked=function handleChecked(idx){return function(e){// changes the checked value status\nvar trows=_toConsumableArray(tableRows);trows[idx]={id:trows[idx].id,cam:trows[idx].cam!==''?trows[idx].cam:'',ip:trows[idx].ip!==''?trows[idx].ip:'',del:e.target.checked,err:trows[idx].err};setTableRows(trows);// cameras added to list if the box is checked\nif(e.target.checked){setDeleteCam([].concat(_toConsumableArray(deleteCam),[tableRows[idx].id]));}else{var index=deleteCam.indexOf(tableRows[idx].id);if(index>-1){deleteCam.splice(index,1);}setDeleteCam(deleteCam);}};};// disconnects all the selected cameras from the session\nvar deleteSelectedCam=function deleteSelectedCam(){var camToDelete=[];// validates the cameras that are to be deleted\nvar _iterator=_createForOfIteratorHelper(deleteCam),_step;try{var _loop=function _loop(){var id=_step.value;var index=tableRows.findIndex(function(val){return val.id===id;});if(tableRows[index].cam!==''&&tableRows[index].ip!==''){camToDelete.push(tableRows[index].cam);var indx=connectedCameras.indexOf(id);// removing cameras from already connected camera list\nif(indx>-1){connectedCameras.splice(indx,1);}}tableRows.splice(index,1);setTableRows(tableRows);};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}// call for diconnecting the cameras \n}catch(err){_iterator.e(err);}finally{_iterator.f();}if(camToDelete.length>0){props.removeCam(camToDelete);}setDeleteCam([]);};// establishes connection for the cameras\nvar connectSelectedCam=function connectSelectedCam(){var camToConnect=[];// adds only the cameras that are not already connected\nvar _iterator2=_createForOfIteratorHelper(tableRows),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var val=_step2.value;if(!val.err&&!connectedCameras.includes(val.id)){if(val.cam!==''&&val.ip!==''){camToConnect.push(val);connectedCameras.push(val.id);}}}// call for establishing connection\n}catch(err){_iterator2.e(err);}finally{_iterator2.f();}if(camToConnect.length>0){props.getToken(camToConnect);}};// adds new row to the table\nvar handleAddRow=function handleAddRow(){var item={id:rowId,cam:'',ip:'',del:false,err:false};rowId++;setTableRows([].concat(_toConsumableArray(tableRows),[item]));};// remove all the rows that are empty\nvar handleRemoveRow=function handleRemoveRow(){var nonEmptyRows=tableRows.filter(function(val){return val.cam!==''&&val.ip!=='';});setTableRows(nonEmptyRows);};// handle changes while modifying details in the table\nvar handleChange=function handleChange(idx){return function(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;var rows=_toConsumableArray(tableRows);// adds the camera name\nif(name==='cam'){rows[idx]={id:rows[idx].id,[name]:value,ip:rows[idx].ip!==''?rows[idx].ip:'',del:rows[idx].del?true:false,err:value!==''&&rows.find(function(val){return val.cam===value;})};}else{// adds the camera rstp url\nrows[idx]={id:rows[idx].id,cam:rows[idx].cam!==''?rows[idx].cam:'',[name]:value,del:rows[idx].del?true:false,err:rows[idx].err};}setTableRows(rows);};};// function to the render dynamic table\nvar renderTable=function renderTable(){return tableRows.map(function(rows,idx){return/*#__PURE__*/React.createElement(TableRow,{key:idx},/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(TextField,{error:tableRows[idx].err?true:false,label:\"Name\",name:\"cam\",variant:\"outlined\",helperText:tableRows[idx].err?'Duplicate camera name':'',value:tableRows[idx].cam,onChange:handleChange(idx)})),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(TextField,{error:tableRows[idx].err?true:false,disabled:tableRows[idx].err?true:false,label:\"rtsp stream url\",name:\"ip\",variant:\"outlined\",value:tableRows[idx].ip,onChange:handleChange(idx)})),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Checkbox,{indeterminate:true,inputProps:{'aria-label':'indeterminate checkbox'},checked:tableRows[idx].del,onChange:handleChecked(idx)})));});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{open:props.open,onClose:handleClose,\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\"},/*#__PURE__*/React.createElement(\"div\",{style:modalStyle,className:classes.paper},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",className:classes.title},\"Subscribe to IP Cameras\"),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:connectSelectedCam},\"Connect\"),/*#__PURE__*/React.createElement(Button,{className:classes.btn,variant:\"contained\",color:\"secondary\",onClick:deleteSelectedCam},\"Disconnect\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TableContainer,{component:Paper,className:classes.container},/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Camera Name\"),/*#__PURE__*/React.createElement(TableCell,null,\"Camera IP\"),/*#__PURE__*/React.createElement(TableCell,null,\"Remove\"))),/*#__PURE__*/React.createElement(TableBody,null,renderTable()))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",color:\"primary\",onClick:handleAddRow},\"Add Row\"),/*#__PURE__*/React.createElement(Button,{className:classes.btn,variant:\"outlined\",color:\"secondary\",onClick:handleRemoveRow},\"Delete Empty Rows\"))));};export default IpCameraComponent;","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core/client/src/components/ip-camera/IpCameraComponent.js"],"names":["React","useState","makeStyles","Modal","Button","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Divider","Typography","Checkbox","getModalStyle","top","left","transform","useStyles","theme","paper","outline","position","width","backgroundColor","palette","background","padding","spacing","container","maxHeight","btn","marginLeft","title","display","alignItems","mixins","toolbar","justifyContent","rowId","connectedCameras","IpCameraComponent","props","classes","modalStyle","id","cam","ip","del","err","tableRows","setTableRows","deleteCam","setDeleteCam","handleClose","setClose","handleChecked","idx","e","trows","target","checked","index","indexOf","splice","deleteSelectedCam","camToDelete","findIndex","val","push","indx","length","removeCam","connectSelectedCam","camToConnect","includes","getToken","handleAddRow","item","handleRemoveRow","nonEmptyRows","filter","handleChange","name","value","rows","find","renderTable","map","open","table"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    outline: 'none',\n    position: 'absolute',\n    width: 700,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4, 4, 4),\n  },\n  container: {\n    maxHeight: 400,\n  },\n  btn: {\n    marginLeft: 30,\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1), ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\"\n  }\n}));\n\n// assigning unique id for each camera\nlet rowId = 4;\n\n// contains already connected cameras  \nlet connectedCameras = [];\n\nconst IpCameraComponent =(props) =>{\n\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n\n  // newly added cameras will go into tableRows\n  const [tableRows, setTableRows] = useState([\n    {id:0, cam:'Russian building', ip:'rtsp://195.46.114.132/live/ch00_0', del:false, err:false},\n    {id:1, cam:'Wickenburg, Arizona', ip:'rtsp://98.163.61.242/live/ch00_0', del:false, err:false},\n    {id:2, cam:'City', ip:'rtsp://91.191.213.49:554/live_mpeg4.sdp', del:false, err:false},\n    // {id:3, cam:'Hessdalen', ip:'rtsp://freja.hiof.no:1935/rtplive/definst/hessdalen03.stream', del:false, err:false}\n  ]);\n\n  // deleted cameras is stored in this variable\n  const [deleteCam, setDeleteCam] = useState([]);\n\n  const handleClose = () => {\n    props.setClose();\n  };\n\n  // function to handle checkbox onchecked validation\n  const handleChecked = (idx) => (e) => {\n\n    // changes the checked value status\n    const trows = [...tableRows];\n    trows[idx] = {\n      id: trows[idx].id,\n      cam: trows[idx].cam !== ''? trows[idx].cam: '',\n      ip: trows[idx].ip !== ''? trows[idx].ip: '',\n      del: e.target.checked,\n      err: trows[idx].err\n    }\n    setTableRows(trows);\n\n    // cameras added to list if the box is checked\n    if(e.target.checked) {\n      setDeleteCam([...deleteCam, tableRows[idx].id])\n    }\n    else {\n\n      const index = deleteCam.indexOf(tableRows[idx].id);\n      if(index > -1) {\n        deleteCam.splice(index, 1);\n      }\n      setDeleteCam(deleteCam);\n    }\n  }\n\n  // disconnects all the selected cameras from the session\n  const deleteSelectedCam = () => {\n\n    const camToDelete = [];\n    \n    // validates the cameras that are to be deleted\n    for(const id of deleteCam) {\n\n      const index = tableRows.findIndex(val => val.id === id);\n      if(tableRows[index].cam !== '' && tableRows[index].ip !== '') {\n        \n        camToDelete.push(tableRows[index].cam);\n        let indx = connectedCameras.indexOf(id);\n\n        // removing cameras from already connected camera list\n        if (indx > -1) {\n          connectedCameras.splice(indx, 1);\n        }\n      }\n      tableRows.splice(index, 1);\n      setTableRows(tableRows);\n    }\n\n    // call for diconnecting the cameras \n    if(camToDelete.length > 0) {\n      props.removeCam(camToDelete);\n    }\n\n    setDeleteCam([]);\n  }\n\n  // establishes connection for the cameras\n  const connectSelectedCam = () => {\n\n    let camToConnect = [];\n\n    // adds only the cameras that are not already connected\n    for(const val of tableRows) {\n      if(!val.err && !connectedCameras.includes(val.id)) {\n        if(val.cam !== '' && val.ip !== '') {\n          camToConnect.push(val);\n          connectedCameras.push(val.id);\n        }\n      }\n    }\n\n    // call for establishing connection\n    if(camToConnect.length > 0) {\n      props.getToken(camToConnect);\n    }\n  }\n\n  // adds new row to the table\n  const handleAddRow = () => {\n    const item = {\n      id  : rowId,\n      cam : '',\n      ip  : '',\n      del : false,\n      err : false\n    };\n    rowId++;\n    setTableRows([...tableRows, item]);\n  };\n\n  // remove all the rows that are empty\n  const handleRemoveRow = () => {\n    const nonEmptyRows = tableRows.filter(val => val.cam !== '' && val.ip !== '');\n    setTableRows(nonEmptyRows)\n  };\n\n  // handle changes while modifying details in the table\n  const handleChange = (idx) => (e) => {\n\n    const { name, value } = e.target;\n    const rows = [...tableRows];\n\n    // adds the camera name\n    if(name === 'cam') {\n      rows[idx] = {\n        id    : rows[idx].id,\n        [name]: value,\n        ip    : rows[idx].ip !== ''? rows[idx].ip: '',\n        del   : rows[idx].del? true: false,\n        err   : value !== '' && rows.find(val => val.cam === value)\n      }\n    }\n    else { // adds the camera rstp url\n      rows[idx] = {\n        id    : rows[idx].id,\n        cam   : rows[idx].cam !== ''? rows[idx].cam: '',\n        [name]: value,\n        del   : rows[idx].del? true: false,\n        err   : rows[idx].err\n      }\n    }\n    setTableRows(rows);\n  };\n\n  // function to the render dynamic table\n  const renderTable = () => {\n    return tableRows.map((rows, idx) => {\n      return (\n        <TableRow key={idx}>\n          <TableCell>\n            <TextField error={tableRows[idx].err? true: false} label=\"Name\" name=\"cam\" variant=\"outlined\" helperText={tableRows[idx].err?'Duplicate camera name':''} \n              value={tableRows[idx].cam} onChange={handleChange(idx)}/>\n          </TableCell>\n          <TableCell>\n            <TextField error={tableRows[idx].err? true: false} disabled={tableRows[idx].err? true: false} label=\"rtsp stream url\" name=\"ip\" variant=\"outlined\" \n              value={tableRows[idx].ip} onChange={handleChange(idx)}/>\n          </TableCell>\n          <TableCell>\n           <Checkbox  indeterminate inputProps={{ 'aria-label': 'indeterminate checkbox' }}  checked={tableRows[idx].del} onChange={handleChecked(idx)}/>\n          </TableCell>\n        </TableRow>\n      )\n    })\n  }\n\n  return (\n    <div>\n      <Modal\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n       \n        <div style={modalStyle} className={classes.paper}>\n          <Typography variant=\"h4\" className={classes.title} >\n            Subscribe to IP Cameras\n          </Typography>\n          <Divider />\n          <br/>\n          <Button variant=\"contained\" color=\"primary\" onClick={connectSelectedCam}>\n            Connect\n          </Button>\n          <Button className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={deleteSelectedCam}>\n            Disconnect\n          </Button>\n          <br/>\n          <br/>\n          <TableContainer component={Paper} className={classes.container}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Camera Name</TableCell>\n                  <TableCell>Camera IP</TableCell>\n                  <TableCell>Remove</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {renderTable()}\n              </TableBody>\n            </Table>\n          </TableContainer>\n            <br/>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleAddRow}>\n              Add Row\n            </Button>\n            <Button className={classes.btn} variant=\"outlined\" color=\"secondary\" onClick={handleRemoveRow}>\n              Delete Empty Rows\n            </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\nexport default IpCameraComponent;"]},"metadata":{},"sourceType":"module"}