{"ast":null,"code":"import _classCallCheck from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/dilip/Desktop/iuvdx-core-old/client/src/components/dialog-extension/DialogExtension.js\";\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport './DialogExtension.css';\n\nvar DialogExtensionComponent = /*#__PURE__*/function (_Component) {\n  _inherits(DialogExtensionComponent, _Component);\n\n  var _super = _createSuper(DialogExtensionComponent);\n\n  function DialogExtensionComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DialogExtensionComponent);\n\n    _this = _super.call(this, props);\n    _this.openviduExtensionUrl = 'https://chrome.google.com/webstore/detail/openvidu-screensharing/lfcgfepafnobdloecchnfaclibenjold'; //isInstalled: boolean;\n\n    _this.state = {\n      isInstalled: false\n    };\n    _this.goToChromePage = _this.goToChromePage.bind(_assertThisInitialized(_this));\n    _this.onNoClick = _this.onNoClick.bind(_assertThisInitialized(_this));\n    _this.refreshBrowser = _this.refreshBrowser.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DialogExtensionComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"onNoClick\",\n    value: function onNoClick() {\n      // this.cancel.emit();\n      this.props.cancelClicked();\n    }\n  }, {\n    key: \"goToChromePage\",\n    value: function goToChromePage() {\n      window.open(this.openviduExtensionUrl);\n      this.setState({\n        isInstalled: true\n      });\n    }\n  }, {\n    key: \"refreshBrowser\",\n    value: function refreshBrowser() {\n      window.location.reload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, this.props && this.props.showDialog ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"dialogExtension\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        id: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, \"Hello\"), /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, \"You need install this chrome extension and refresh the browser for can share your screen.\")), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        onClick: this.onNoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        onClick: this.goToChromePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, \"Install\"), this.state.isInstalled ? /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        onClick: this.refreshBrowser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, \"Refresh\") : null))) : null);\n    }\n  }]);\n\n  return DialogExtensionComponent;\n}(Component);\n\nexport { DialogExtensionComponent as default };","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core-old/client/src/components/dialog-extension/DialogExtension.js"],"names":["React","Component","Card","CardActions","CardContent","Typography","Button","DialogExtensionComponent","props","openviduExtensionUrl","state","isInstalled","goToChromePage","bind","onNoClick","refreshBrowser","cancelClicked","window","open","setState","location","reload","showDialog"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,uBAAP;;IAEqBC,wB;;;;;AACjB,oCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,oBAAL,GACI,mGADJ,CAFe,CAIf;;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,+BAAtB;AAXe;AAYlB;;;;8CAEyBL,K,EAAO,CAAE;;;wCAEf,CAAE;;;gCAEV;AACR;AACA,WAAKA,KAAL,CAAWQ,aAAX;AACH;;;qCAEgB;AACbC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKT,oBAAjB;AACA,WAAKU,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH;;;qCAEgB;AACbM,MAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACH;;;6BAEQ;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKb,KAAL,IAAc,KAAKA,KAAL,CAAWc,UAAzB,gBACG;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAFJ,CADJ,eAOI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAE,KAAKR,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAE,KAAKF,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAQK,KAAKF,KAAL,CAAWC,WAAX,gBACG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAE,KAAKI,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,GAIG,IAZR,CAPJ,CADJ,CADH,GAyBG,IA1BR,CADJ;AA8BH;;;;EAhEiDd,S;;SAAjCM,wB","sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport './DialogExtension.css';\n\nexport default class DialogExtensionComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.openviduExtensionUrl =\n            'https://chrome.google.com/webstore/detail/openvidu-screensharing/lfcgfepafnobdloecchnfaclibenjold';\n        //isInstalled: boolean;\n\n        this.state = {\n            isInstalled: false,\n        };\n        this.goToChromePage = this.goToChromePage.bind(this);\n        this.onNoClick = this.onNoClick.bind(this);\n        this.refreshBrowser = this.refreshBrowser.bind(this);\n    }\n\n    componentWillReceiveProps(props) {}\n\n    componentDidMount() {}\n\n    onNoClick() {\n        // this.cancel.emit();\n        this.props.cancelClicked();\n    }\n\n    goToChromePage() {\n        window.open(this.openviduExtensionUrl);\n        this.setState({ isInstalled: true });\n    }\n\n    refreshBrowser() {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props && this.props.showDialog ? (\n                    <div id=\"dialogExtension\">\n                        <Card id=\"card\">\n                            <CardContent>\n                                <Typography color=\"textSecondary\">Hello</Typography>\n                                <Typography color=\"textSecondary\">\n                                    You need install this chrome extension and refresh the browser for can share your screen.\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\" onClick={this.onNoClick}>\n                                    Cancel\n                                </Button>\n\n                                <Button size=\"small\" onClick={this.goToChromePage}>\n                                    Install\n                                </Button>\n                                {this.state.isInstalled ? (\n                                    <Button size=\"small\" onClick={this.refreshBrowser}>\n                                        Refresh\n                                    </Button>\n                                ) : null}\n                            </CardActions>\n                        </Card>\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}