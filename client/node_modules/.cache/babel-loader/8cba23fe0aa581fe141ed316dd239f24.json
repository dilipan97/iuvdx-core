{"ast":null,"code":"import _classCallCheck from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./ToolbarComponent.css';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Mic from'@material-ui/icons/Mic';import MicOff from'@material-ui/icons/MicOff';import Videocam from'@material-ui/icons/Videocam';import VideocamOff from'@material-ui/icons/VideocamOff';import Fullscreen from'@material-ui/icons/Fullscreen';import FullscreenExit from'@material-ui/icons/FullscreenExit';import ScreenShare from'@material-ui/icons/ScreenShare';import StopScreenShare from'@material-ui/icons/StopScreenShare';import Tooltip from'@material-ui/core/Tooltip';import PowerSettingsNew from'@material-ui/icons/PowerSettingsNew';import QuestionAnswer from'@material-ui/icons/QuestionAnswer';import IconButton from'@material-ui/core/IconButton';import Group from'@material-ui/icons/Group';var logo=require('../../assets/images/IUDX-logo.png');var ipcam=require('../../assets/images/ipcam.png');var ToolbarComponent=/*#__PURE__*/function(_Component){_inherits(ToolbarComponent,_Component);var _super=_createSuper(ToolbarComponent);function ToolbarComponent(props){var _this;_classCallCheck(this,ToolbarComponent);_this=_super.call(this,props);_this.state={fullscreen:false};_this.camStatusChanged=_this.camStatusChanged.bind(_assertThisInitialized(_this));_this.micStatusChanged=_this.micStatusChanged.bind(_assertThisInitialized(_this));_this.groupStatusChanged=_this.groupStatusChanged.bind(_assertThisInitialized(_this));_this.screenShare=_this.screenShare.bind(_assertThisInitialized(_this));_this.stopScreenShare=_this.stopScreenShare.bind(_assertThisInitialized(_this));_this.toggleFullscreen=_this.toggleFullscreen.bind(_assertThisInitialized(_this));_this.leaveSessionPage=_this.leaveSessionPage.bind(_assertThisInitialized(_this));_this.toggleChat=_this.toggleChat.bind(_assertThisInitialized(_this));_this.showIPCameraDialog=_this.showIPCameraDialog.bind(_assertThisInitialized(_this));return _this;}_createClass(ToolbarComponent,[{key:\"micStatusChanged\",value:function micStatusChanged(){this.props.micStatusChanged();}},{key:\"camStatusChanged\",value:function camStatusChanged(){this.props.camStatusChanged();}},{key:\"groupStatusChanged\",value:function groupStatusChanged(){this.props.groupStatusChanged();}},{key:\"screenShare\",value:function screenShare(){this.props.screenShare();}},{key:\"stopScreenShare\",value:function stopScreenShare(){this.props.stopScreenShare();}},{key:\"toggleFullscreen\",value:function toggleFullscreen(){this.setState({fullscreen:!this.state.fullscreen});this.props.toggleFullscreen();}},{key:\"leaveSessionPage\",value:function leaveSessionPage(){this.props.leaveSessionPage();}},{key:\"toggleChat\",value:function toggleChat(){this.props.toggleChat();}},{key:\"showIPCameraDialog\",value:function showIPCameraDialog(){this.props.showIPCameraDialog();}},{key:\"render\",value:function render(){var mySessionId=this.props.sessionId;var localUser=this.props.user;return/*#__PURE__*/React.createElement(AppBar,{className:\"toolbar\",id:\"header\"},/*#__PURE__*/React.createElement(Toolbar,{className:\"toolbar\"},/*#__PURE__*/React.createElement(\"div\",{id:\"navSessionInfo\"},/*#__PURE__*/React.createElement(\"img\",{id:\"header_img\",alt:\"IUVDX\",src:logo}),this.props.sessionId&&/*#__PURE__*/React.createElement(\"div\",{id:\"titleContent\"},/*#__PURE__*/React.createElement(\"span\",{id:\"session-title\"},mySessionId))),/*#__PURE__*/React.createElement(\"div\",{className:\"buttonsContent\"},/*#__PURE__*/React.createElement(IconButton,{className:\"navButton\",onClick:this.showIPCameraDialog},/*#__PURE__*/React.createElement(\"img\",{className:\"ipCamButton\",src:ipcam,alt:\"ipcam\"})),/*#__PURE__*/React.createElement(IconButton,{className:\"navButton\",id:\"navGroupButton\",onClick:this.groupStatusChanged},localUser!==undefined&&localUser.isGroupActive()?/*#__PURE__*/React.createElement(Group,null):/*#__PURE__*/React.createElement(Group,{color:\"secondary\"})),/*#__PURE__*/React.createElement(IconButton,{className:\"navButton\",id:\"navMicButton\",onClick:this.micStatusChanged},localUser!==undefined&&localUser.isAudioActive()?/*#__PURE__*/React.createElement(Mic,null):/*#__PURE__*/React.createElement(MicOff,{color:\"secondary\"})),/*#__PURE__*/React.createElement(IconButton,{className:\"navButton\",id:\"navCamButton\",onClick:this.camStatusChanged},localUser!==undefined&&localUser.isVideoActive()?/*#__PURE__*/React.createElement(Videocam,null):/*#__PURE__*/React.createElement(VideocamOff,{color:\"secondary\"})),localUser!==undefined&&localUser.isScreenShareActive()?/*#__PURE__*/React.createElement(IconButton,{onClick:this.stopScreenShare,id:\"navScreenButton\"},/*#__PURE__*/React.createElement(StopScreenShare,{color:\"secondary\"})):/*#__PURE__*/React.createElement(IconButton,{className:\"navButton\",onClick:this.screenShare},/*#__PURE__*/React.createElement(ScreenShare,null)),/*#__PURE__*/React.createElement(IconButton,{className:\"navButton\",onClick:this.toggleFullscreen},localUser!==undefined&&this.state.fullscreen?/*#__PURE__*/React.createElement(FullscreenExit,null):/*#__PURE__*/React.createElement(Fullscreen,null)),/*#__PURE__*/React.createElement(IconButton,{color:\"secondary\",className:\"navButton\",onClick:this.leaveSessionPage,id:\"navLeaveButton\"},/*#__PURE__*/React.createElement(PowerSettingsNew,null)),/*#__PURE__*/React.createElement(IconButton,{onClick:this.toggleChat,id:\"navChatButton\"},this.props.showNotification&&/*#__PURE__*/React.createElement(\"div\",{id:\"point\",className:\"\"}),/*#__PURE__*/React.createElement(Tooltip,{title:\"Chat\"},/*#__PURE__*/React.createElement(QuestionAnswer,null))))));}}]);return ToolbarComponent;}(Component);export{ToolbarComponent as default};","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core/client/src/components/toolbar/ToolbarComponent.js"],"names":["React","Component","AppBar","Toolbar","Mic","MicOff","Videocam","VideocamOff","Fullscreen","FullscreenExit","ScreenShare","StopScreenShare","Tooltip","PowerSettingsNew","QuestionAnswer","IconButton","Group","logo","require","ipcam","ToolbarComponent","props","state","fullscreen","camStatusChanged","bind","micStatusChanged","groupStatusChanged","screenShare","stopScreenShare","toggleFullscreen","leaveSessionPage","toggleChat","showIPCameraDialog","setState","mySessionId","sessionId","localUser","user","undefined","isGroupActive","isAudioActive","isVideoActive","isScreenShareActive","showNotification"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ToolbarComponent.css';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Mic from '@material-ui/icons/Mic';\nimport MicOff from '@material-ui/icons/MicOff';\nimport Videocam from '@material-ui/icons/Videocam';\nimport VideocamOff from '@material-ui/icons/VideocamOff';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport FullscreenExit from '@material-ui/icons/FullscreenExit';\nimport ScreenShare from '@material-ui/icons/ScreenShare';\nimport StopScreenShare from '@material-ui/icons/StopScreenShare';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Group from '@material-ui/icons/Group';\n\nconst logo = require('../../assets/images/IUDX-logo.png');\nconst ipcam = require('../../assets/images/ipcam.png');\n\nexport default class ToolbarComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { fullscreen: false };\n        this.camStatusChanged = this.camStatusChanged.bind(this);\n        this.micStatusChanged = this.micStatusChanged.bind(this);\n        this.groupStatusChanged = this.groupStatusChanged.bind(this);\n        this.screenShare = this.screenShare.bind(this);\n        this.stopScreenShare = this.stopScreenShare.bind(this);\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\n        this.leaveSessionPage = this.leaveSessionPage.bind(this);\n        this.toggleChat = this.toggleChat.bind(this);\n        this.showIPCameraDialog = this.showIPCameraDialog.bind(this);\n    }\n\n\n    micStatusChanged() {\n        this.props.micStatusChanged();\n    }\n\n    camStatusChanged() {\n        this.props.camStatusChanged();\n    }\n\n    groupStatusChanged() {\n        this.props.groupStatusChanged();\n    }\n\n    screenShare() {\n        this.props.screenShare();\n    }\n\n    stopScreenShare() {\n        this.props.stopScreenShare();\n    }\n\n    toggleFullscreen() {\n        this.setState({ fullscreen: !this.state.fullscreen });\n        this.props.toggleFullscreen();\n    }\n\n    leaveSessionPage() {\n        this.props.leaveSessionPage();\n    }\n\n    toggleChat() {\n        this.props.toggleChat();\n    }\n    showIPCameraDialog(){\n        this.props.showIPCameraDialog();\n    }\n\n    render() {\n        const mySessionId = this.props.sessionId;\n        const localUser = this.props.user;\n        return (\n            <AppBar className=\"toolbar\" id=\"header\">\n                <Toolbar className=\"toolbar\">\n                    <div id=\"navSessionInfo\">\n                        <img\n                            id=\"header_img\"\n                            alt=\"IUVDX\"\n                            src={logo}\n                        />\n\n                        {this.props.sessionId && <div id=\"titleContent\">\n                            <span id=\"session-title\">{mySessionId}</span>\n                        </div>}\n                    </div>\n\n                    <div className=\"buttonsContent\">\n                        <IconButton className=\"navButton\" onClick={this.showIPCameraDialog} >\n                            <img className=\"ipCamButton\" src={ipcam} alt=\"ipcam\"/>\n                        </IconButton>\n\n                        <IconButton className=\"navButton\" id=\"navGroupButton\" onClick={this.groupStatusChanged}>\n                            {localUser !== undefined && localUser.isGroupActive() ? <Group />  : <Group color=\"secondary\" />}\n                        </IconButton>\n                        \n                        <IconButton className=\"navButton\" id=\"navMicButton\" onClick={this.micStatusChanged}>\n                            {localUser !== undefined && localUser.isAudioActive() ? <Mic /> : <MicOff color=\"secondary\" />}\n                        </IconButton>\n\n                        <IconButton className=\"navButton\" id=\"navCamButton\" onClick={this.camStatusChanged}>\n                            {localUser !== undefined && localUser.isVideoActive() ? (\n                                <Videocam />\n                            ) : (\n                                <VideocamOff color=\"secondary\" />\n                            )}\n                        </IconButton>\n\n\n                        {localUser !== undefined &&\n                            localUser.isScreenShareActive() ? \n                                (\n                                <IconButton onClick={this.stopScreenShare} id=\"navScreenButton\">\n                                    <StopScreenShare color=\"secondary\" />\n                                </IconButton>\n                            ) : (\n                                (\n                                <IconButton className=\"navButton\" onClick={this.screenShare}>\n                                    <ScreenShare />\n                                </IconButton>) \n                            )}\n\n                        <IconButton className=\"navButton\" onClick={this.toggleFullscreen}>\n                            {localUser !== undefined && this.state.fullscreen ? <FullscreenExit /> : <Fullscreen />}\n                        </IconButton>\n\n                        <IconButton color=\"secondary\" className=\"navButton\" onClick={this.leaveSessionPage} id=\"navLeaveButton\">\n                            <PowerSettingsNew />\n                        </IconButton>\n\n                         <IconButton onClick={this.toggleChat} id=\"navChatButton\">\n                            {this.props.showNotification && <div id=\"point\" className=\"\" />}\n                            <Tooltip title=\"Chat\">\n                                <QuestionAnswer />\n                            </Tooltip>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}