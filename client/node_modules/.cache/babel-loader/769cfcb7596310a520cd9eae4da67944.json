{"ast":null,"code":"import _classCallCheck from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/dilip/Desktop/iuvdx-core-old/client/src/components/chat/ChatComponent.js\";\nimport React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\nimport Send from '@material-ui/icons/Send';\nimport './ChatComponent.css';\nimport { Tooltip } from '@material-ui/core';\n\nvar ChatComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ChatComponent, _Component);\n\n  var _super = _createSuper(ChatComponent);\n\n  function ChatComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ChatComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messageList: [],\n      message: ''\n    };\n    _this.chatScroll = React.createRef();\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handlePressKey = _this.handlePressKey.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ChatComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.user.getStreamManager().stream.session.on('signal:chat', function (event) {\n        var data = JSON.parse(event.data);\n        var messageList = _this2.state.messageList;\n        messageList.push({\n          connectionId: event.from.connectionId,\n          nickname: data.nickname,\n          message: data.message\n        });\n        var document = window.document;\n        setTimeout(function () {\n          var userImg = document.getElementById('userImg-' + (_this2.state.messageList.length - 1));\n          var video = document.getElementById('video-' + data.streamId);\n          var avatar = userImg.getContext('2d');\n          avatar.drawImage(video, 200, 120, 285, 285, 0, 0, 60, 60);\n\n          _this2.props.messageReceived();\n        }, 50);\n\n        _this2.setState({\n          messageList: messageList\n        });\n\n        _this2.scrollToBottom();\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n  }, {\n    key: \"handlePressKey\",\n    value: function handlePressKey(event) {\n      if (event.key === 'Enter') {\n        this.sendMessage();\n      }\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage() {\n      console.log(this.state.message);\n\n      if (this.props.user && this.state.message) {\n        var message = this.state.message.replace(/ +(?= )/g, '');\n\n        if (message !== '' && message !== ' ') {\n          var data = {\n            message: message,\n            nickname: this.props.user.getNickname(),\n            streamId: this.props.user.getStreamManager().stream.streamId\n          };\n          this.props.user.getStreamManager().stream.session.signal({\n            data: JSON.stringify(data),\n            type: 'chat'\n          });\n        }\n      }\n\n      this.setState({\n        message: ''\n      });\n    }\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        try {\n          _this3.chatScroll.current.scrollTop = _this3.chatScroll.current.scrollHeight;\n        } catch (err) {}\n      }, 20);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.props.close(undefined);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var styleChat = {\n        display: this.props.chatDisplay\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chatContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chatComponent\",\n        style: styleChat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chatToolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, this.props.user.getStreamManager().stream.session.sessionId, \" - CHAT\"), /*#__PURE__*/React.createElement(IconButton, {\n        id: \"closeButton\",\n        onClick: this.close,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(HighlightOff, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message-wrap\",\n        ref: this.chatScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, this.state.messageList.map(function (data, i) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          id: \"remoteUsers\",\n          className: 'message' + (data.connectionId !== _this4.props.user.getConnectionId() ? ' left' : ' right'),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"canvas\", {\n          id: 'userImg-' + i,\n          width: \"60\",\n          height: \"60\",\n          className: \"user-img\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"msg-detail\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"msg-info\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }\n        }, \" \", data.nickname)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"msg-content\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"triangle\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 41\n          }\n        }, data.message))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"messageInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Send a messge\",\n        id: \"chatInput\",\n        value: this.state.message,\n        onChange: this.handleChange,\n        onKeyPress: this.handlePressKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Send message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        id: \"sendButton\",\n        onClick: this.sendMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Send, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return ChatComponent;\n}(Component);\n\nexport { ChatComponent as default };","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core-old/client/src/components/chat/ChatComponent.js"],"names":["React","Component","IconButton","Fab","HighlightOff","Send","Tooltip","ChatComponent","props","state","messageList","message","chatScroll","createRef","handleChange","bind","handlePressKey","close","sendMessage","user","getStreamManager","stream","session","on","event","data","JSON","parse","push","connectionId","from","nickname","document","window","setTimeout","userImg","getElementById","length","video","streamId","avatar","getContext","drawImage","messageReceived","setState","scrollToBottom","target","value","key","console","log","replace","getNickname","signal","stringify","type","current","scrollTop","scrollHeight","err","undefined","styleChat","display","chatDisplay","sessionId","map","i","getConnectionId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\nimport Send from '@material-ui/icons/Send';\n\nimport './ChatComponent.css';\nimport { Tooltip } from '@material-ui/core';\n\nexport default class ChatComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messageList: [],\n            message: '',\n        };\n        this.chatScroll = React.createRef();\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePressKey = this.handlePressKey.bind(this);\n        this.close = this.close.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.props.user.getStreamManager().stream.session.on('signal:chat', (event) => {\n            const data = JSON.parse(event.data);\n            let messageList = this.state.messageList;\n            messageList.push({ connectionId: event.from.connectionId, nickname: data.nickname, message: data.message });\n            const document = window.document;\n            setTimeout(() => {\n                const userImg = document.getElementById('userImg-' + (this.state.messageList.length - 1));\n                const video = document.getElementById('video-' + data.streamId);\n                const avatar = userImg.getContext('2d');\n                avatar.drawImage(video, 200, 120, 285, 285, 0, 0, 60, 60);\n                this.props.messageReceived();\n            }, 50);\n            this.setState({ messageList: messageList });\n            this.scrollToBottom();\n        });\n    }\n\n    handleChange(event) {\n        this.setState({ message: event.target.value });\n    }\n\n    handlePressKey(event) {\n        if (event.key === 'Enter') {\n            this.sendMessage();\n        }\n    }\n\n    sendMessage() {\n        console.log(this.state.message);\n        if (this.props.user && this.state.message) {\n            let message = this.state.message.replace(/ +(?= )/g, '');\n            if (message !== '' && message !== ' ') {\n                const data = { message: message, nickname: this.props.user.getNickname(), streamId: this.props.user.getStreamManager().stream.streamId };\n                this.props.user.getStreamManager().stream.session.signal({\n                    data: JSON.stringify(data),\n                    type: 'chat',\n                });\n            }\n        }\n        this.setState({ message: '' });\n    }\n\n    scrollToBottom() {\n        setTimeout(() => {\n            try {\n                this.chatScroll.current.scrollTop = this.chatScroll.current.scrollHeight;\n            } catch (err) {}\n        }, 20);\n    }\n\n    close() {\n        this.props.close(undefined);\n    }\n\n    render() {\n        const styleChat = { display: this.props.chatDisplay };\n        return (\n            <div id=\"chatContainer\">\n                <div id=\"chatComponent\" style={styleChat}>\n                    <div id=\"chatToolbar\">\n                        <span>{this.props.user.getStreamManager().stream.session.sessionId} - CHAT</span>\n                        <IconButton id=\"closeButton\" onClick={this.close}>\n                            <HighlightOff color=\"secondary\" />\n                        </IconButton>\n                    </div>\n                    <div className=\"message-wrap\" ref={this.chatScroll}>\n                        {this.state.messageList.map((data, i) => (\n                            <div\n                                key={i}\n                                id=\"remoteUsers\"\n                                className={\n                                    'message' + (data.connectionId !== this.props.user.getConnectionId() ? ' left' : ' right')\n                                }\n                            >\n                                <canvas id={'userImg-' + i} width=\"60\" height=\"60\" className=\"user-img\" />\n                                <div className=\"msg-detail\">\n                                    <div className=\"msg-info\">\n                                        <p> {data.nickname}</p>\n                                    </div>\n                                    <div className=\"msg-content\">\n                                        <span className=\"triangle\" />\n                                        <p className=\"text\">{data.message}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n\n                    <div id=\"messageInput\">\n                        <input\n                            placeholder=\"Send a messge\"\n                            id=\"chatInput\"\n                            value={this.state.message}\n                            onChange={this.handleChange}\n                            onKeyPress={this.handlePressKey}\n                        />\n                        <Tooltip title=\"Send message\">\n                            <Fab size=\"small\" id=\"sendButton\" onClick={this.sendMessage}>\n                                <Send />\n                            </Fab>\n                        </Tooltip>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}