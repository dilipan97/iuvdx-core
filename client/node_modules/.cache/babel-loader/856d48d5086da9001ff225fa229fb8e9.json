{"ast":null,"code":"import _classCallCheck from \"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dilip/Desktop/iuvdx-core/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar UserModel = /*#__PURE__*/function () {\n  // 'remote' | 'local'\n  function UserModel() {\n    _classCallCheck(this, UserModel);\n\n    this.connectionId = '';\n    this.audioActive = true;\n    this.videoActive = false;\n    this.screenShareActive = false;\n    this.nickname = '';\n    this.streamManager = null;\n    this.type = 'local';\n    this.groupActive = true;\n  }\n\n  _createClass(UserModel, [{\n    key: \"isAudioActive\",\n    value: function isAudioActive() {\n      return this.audioActive;\n    }\n  }, {\n    key: \"isVideoActive\",\n    value: function isVideoActive() {\n      return this.videoActive;\n    }\n  }, {\n    key: \"isScreenShareActive\",\n    value: function isScreenShareActive() {\n      return this.screenShareActive;\n    }\n  }, {\n    key: \"getConnectionId\",\n    value: function getConnectionId() {\n      return this.connectionId;\n    }\n  }, {\n    key: \"getNickname\",\n    value: function getNickname() {\n      return this.nickname;\n    }\n  }, {\n    key: \"getStreamManager\",\n    value: function getStreamManager() {\n      return this.streamManager;\n    }\n  }, {\n    key: \"isLocal\",\n    value: function isLocal() {\n      return this.type === 'local';\n    }\n  }, {\n    key: \"isRemote\",\n    value: function isRemote() {\n      return !this.isLocal();\n    }\n  }, {\n    key: \"isGroupActive\",\n    value: function isGroupActive() {\n      return this.groupActive;\n    }\n  }, {\n    key: \"setAudioActive\",\n    value: function setAudioActive(isAudioActive) {\n      this.audioActive = isAudioActive;\n    }\n  }, {\n    key: \"setVideoActive\",\n    value: function setVideoActive(isVideoActive) {\n      this.videoActive = isVideoActive;\n    }\n  }, {\n    key: \"setScreenShareActive\",\n    value: function setScreenShareActive(isScreenShareActive) {\n      this.screenShareActive = isScreenShareActive;\n    }\n  }, {\n    key: \"setStreamManager\",\n    value: function setStreamManager(streamManager) {\n      this.streamManager = streamManager;\n    }\n  }, {\n    key: \"setConnectionId\",\n    value: function setConnectionId(conecctionId) {\n      this.connectionId = conecctionId;\n    }\n  }, {\n    key: \"setNickname\",\n    value: function setNickname(nickname) {\n      this.nickname = nickname;\n    }\n  }, {\n    key: \"setGroupActive\",\n    value: function setGroupActive(groupActive) {\n      this.groupActive = groupActive;\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(type) {\n      if (type === 'local' | type === 'remote') {\n        this.type = type;\n      }\n    }\n  }]);\n\n  return UserModel;\n}();\n\nexport default UserModel;","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core/client/src/models/user-model.js"],"names":["UserModel","connectionId","audioActive","videoActive","screenShareActive","nickname","streamManager","type","groupActive","isLocal","isAudioActive","isVideoActive","isScreenShareActive","conecctionId"],"mappings":";;;IAAMA,S;AAOI;AAGN,uBAAc;AAAA;;AACV,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,IAAL,GAAY,OAAZ;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACH;;;;oCAEe;AACZ,aAAO,KAAKN,WAAZ;AACH;;;oCAEe;AACZ,aAAO,KAAKC,WAAZ;AACH;;;0CAEqB;AAClB,aAAO,KAAKC,iBAAZ;AACH;;;sCAEiB;AACd,aAAO,KAAKH,YAAZ;AACH;;;kCAEa;AACV,aAAO,KAAKI,QAAZ;AACH;;;uCAEkB;AACf,aAAO,KAAKC,aAAZ;AACH;;;8BAES;AACN,aAAO,KAAKC,IAAL,KAAc,OAArB;AACH;;;+BAEU;AACP,aAAO,CAAC,KAAKE,OAAL,EAAR;AACH;;;oCAEe;AACZ,aAAO,KAAKD,WAAZ;AACH;;;mCAEcE,a,EAAe;AAC1B,WAAKR,WAAL,GAAmBQ,aAAnB;AACH;;;mCAEcC,a,EAAe;AAC1B,WAAKR,WAAL,GAAmBQ,aAAnB;AACH;;;yCAEoBC,mB,EAAqB;AACtC,WAAKR,iBAAL,GAAyBQ,mBAAzB;AACH;;;qCAEgBN,a,EAAe;AAC5B,WAAKA,aAAL,GAAqBA,aAArB;AACH;;;oCAEeO,Y,EAAc;AAC1B,WAAKZ,YAAL,GAAoBY,YAApB;AACH;;;gCAEWR,Q,EAAU;AAClB,WAAKA,QAAL,GAAgBA,QAAhB;AACH;;;mCAEcG,W,EAAa;AACxB,WAAKA,WAAL,GAAmBA,WAAnB;AACH;;;4BAEOD,I,EAAM;AACV,UAAIA,IAAI,KAAK,OAAT,GAAoBA,IAAI,KAAK,QAAjC,EAA2C;AACvC,aAAKA,IAAL,GAAYA,IAAZ;AACH;AACJ;;;;;;AAGL,eAAeP,SAAf","sourcesContent":["class UserModel {\n    connectionId;\n    audioActive;\n    videoActive;\n    screenShareActive;\n    nickname;\n    streamManager;\n    type; // 'remote' | 'local'\n    groupActive;\n\n    constructor() {\n        this.connectionId = '';\n        this.audioActive = true;\n        this.videoActive = false;\n        this.screenShareActive = false;\n        this.nickname = '';\n        this.streamManager = null;\n        this.type = 'local';\n        this.groupActive = true;\n    }\n\n    isAudioActive() {\n        return this.audioActive;\n    }\n\n    isVideoActive() {\n        return this.videoActive;\n    }\n\n    isScreenShareActive() {\n        return this.screenShareActive;\n    }\n\n    getConnectionId() {\n        return this.connectionId;\n    }\n\n    getNickname() {\n        return this.nickname;\n    }\n\n    getStreamManager() {\n        return this.streamManager;\n    }\n\n    isLocal() {\n        return this.type === 'local';\n    }\n\n    isRemote() {\n        return !this.isLocal();\n    }\n\n    isGroupActive() {\n        return this.groupActive;\n    }\n\n    setAudioActive(isAudioActive) {\n        this.audioActive = isAudioActive;\n    }\n\n    setVideoActive(isVideoActive) {\n        this.videoActive = isVideoActive;\n    }\n\n    setScreenShareActive(isScreenShareActive) {\n        this.screenShareActive = isScreenShareActive;\n    }\n\n    setStreamManager(streamManager) {\n        this.streamManager = streamManager;\n    }\n\n    setConnectionId(conecctionId) {\n        this.connectionId = conecctionId;\n    }\n\n    setNickname(nickname) {\n        this.nickname = nickname;\n    }\n\n    setGroupActive(groupActive) {\n        this.groupActive = groupActive;\n    }\n\n    setType(type) {\n        if (type === 'local' |  type === 'remote') {\n            this.type = type;\n        }\n    }\n}\n\nexport default UserModel;\n"]},"metadata":{},"sourceType":"module"}