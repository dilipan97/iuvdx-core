{"ast":null,"code":"import _classCallCheck from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dilip/Desktop/iuvdx-core-old/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/dilip/Desktop/iuvdx-core-old/client/src/components/toolbar/ToolbarComponent.js\";\nimport React, { Component } from 'react';\nimport './ToolbarComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Mic from '@material-ui/icons/Mic';\nimport MicOff from '@material-ui/icons/MicOff';\nimport Videocam from '@material-ui/icons/Videocam';\nimport VideocamOff from '@material-ui/icons/VideocamOff';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport FullscreenExit from '@material-ui/icons/FullscreenExit';\nimport ScreenShare from '@material-ui/icons/ScreenShare';\nimport StopScreenShare from '@material-ui/icons/StopScreenShare';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Group from '@material-ui/icons/Group';\nimport DnsIcon from '@material-ui/icons/Dns';\n\nvar logo = require('../../assets/images/IUDX-logo.png');\n\nvar ipcam = require('../../assets/images/ipcam.png');\n\nvar ToolbarComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ToolbarComponent, _Component);\n\n  var _super = _createSuper(ToolbarComponent);\n\n  function ToolbarComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ToolbarComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fullscreen: false\n    };\n    _this.camStatusChanged = _this.camStatusChanged.bind(_assertThisInitialized(_this));\n    _this.micStatusChanged = _this.micStatusChanged.bind(_assertThisInitialized(_this));\n    _this.groupStatusChanged = _this.groupStatusChanged.bind(_assertThisInitialized(_this));\n    _this.screenShare = _this.screenShare.bind(_assertThisInitialized(_this));\n    _this.stopScreenShare = _this.stopScreenShare.bind(_assertThisInitialized(_this));\n    _this.toggleFullscreen = _this.toggleFullscreen.bind(_assertThisInitialized(_this));\n    _this.leaveSessionPage = _this.leaveSessionPage.bind(_assertThisInitialized(_this));\n    _this.toggleChat = _this.toggleChat.bind(_assertThisInitialized(_this));\n    _this.showIPCameraDialog = _this.showIPCameraDialog.bind(_assertThisInitialized(_this));\n    _this.showIPCameraServerDialog = _this.showIPCameraServerDialog.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ToolbarComponent, [{\n    key: \"micStatusChanged\",\n    value: function micStatusChanged() {\n      this.props.micStatusChanged();\n    }\n  }, {\n    key: \"camStatusChanged\",\n    value: function camStatusChanged() {\n      this.props.camStatusChanged();\n    }\n  }, {\n    key: \"groupStatusChanged\",\n    value: function groupStatusChanged() {\n      this.props.groupStatusChanged();\n    }\n  }, {\n    key: \"screenShare\",\n    value: function screenShare() {\n      this.props.screenShare();\n    }\n  }, {\n    key: \"stopScreenShare\",\n    value: function stopScreenShare() {\n      this.props.stopScreenShare();\n    }\n  }, {\n    key: \"toggleFullscreen\",\n    value: function toggleFullscreen() {\n      this.setState({\n        fullscreen: !this.state.fullscreen\n      });\n      this.props.toggleFullscreen();\n    }\n  }, {\n    key: \"leaveSessionPage\",\n    value: function leaveSessionPage() {\n      this.props.leaveSessionPage();\n    }\n  }, {\n    key: \"toggleChat\",\n    value: function toggleChat() {\n      this.props.toggleChat();\n    }\n  }, {\n    key: \"showIPCameraDialog\",\n    value: function showIPCameraDialog() {\n      this.props.showIPCameraDialog();\n    }\n  }, {\n    key: \"showIPCameraServerDialog\",\n    value: function showIPCameraServerDialog() {\n      this.props.showIPCameraServerDialog();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mySessionId = this.props.sessionId;\n      var localUser = this.props.user;\n      return /*#__PURE__*/React.createElement(AppBar, {\n        className: \"toolbar\",\n        id: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"navSessionInfo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: \"header_img\",\n        alt: \"IUVDX\",\n        src: logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }), this.props.sessionId && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"titleContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 50\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"session-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, mySessionId))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttonsContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        onClick: this.showIPCameraDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"ipCamButton\",\n        src: ipcam,\n        alt: \"ipcam\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        onClick: this.showIPCameraServerDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DnsIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        id: \"navGroupButton\",\n        onClick: this.groupStatusChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, localUser !== undefined && localUser.isGroupActive() ? /*#__PURE__*/React.createElement(Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 85\n        }\n      }) : /*#__PURE__*/React.createElement(Group, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 98\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        id: \"navMicButton\",\n        onClick: this.micStatusChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, localUser !== undefined && localUser.isAudioActive() ? /*#__PURE__*/React.createElement(Mic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 85\n        }\n      }) : /*#__PURE__*/React.createElement(MicOff, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 95\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        id: \"navCamButton\",\n        onClick: this.camStatusChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, localUser !== undefined && localUser.isVideoActive() ? /*#__PURE__*/React.createElement(Videocam, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(VideocamOff, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      })), localUser !== undefined && localUser.isScreenShareActive() ? /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.stopScreenShare,\n        id: \"navScreenButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(StopScreenShare, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      })) : /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        onClick: this.screenShare,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(ScreenShare, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        className: \"navButton\",\n        onClick: this.toggleFullscreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, localUser !== undefined && this.state.fullscreen ? /*#__PURE__*/React.createElement(FullscreenExit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 81\n        }\n      }) : /*#__PURE__*/React.createElement(Fullscreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 102\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        color: \"secondary\",\n        className: \"navButton\",\n        onClick: this.leaveSessionPage,\n        id: \"navLeaveButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(PowerSettingsNew, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.toggleChat,\n        id: \"navChatButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 26\n        }\n      }, this.props.showNotification && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"point\",\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 61\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(QuestionAnswer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return ToolbarComponent;\n}(Component);\n\nexport { ToolbarComponent as default };","map":{"version":3,"sources":["/home/dilip/Desktop/iuvdx-core-old/client/src/components/toolbar/ToolbarComponent.js"],"names":["React","Component","AppBar","Toolbar","Mic","MicOff","Videocam","VideocamOff","Fullscreen","FullscreenExit","ScreenShare","StopScreenShare","Tooltip","PowerSettingsNew","QuestionAnswer","IconButton","Group","DnsIcon","logo","require","ipcam","ToolbarComponent","props","state","fullscreen","camStatusChanged","bind","micStatusChanged","groupStatusChanged","screenShare","stopScreenShare","toggleFullscreen","leaveSessionPage","toggleChat","showIPCameraDialog","showIPCameraServerDialog","setState","mySessionId","sessionId","localUser","user","undefined","isGroupActive","isAudioActive","isVideoActive","isScreenShareActive","showNotification"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ToolbarComponent.css';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Mic from '@material-ui/icons/Mic';\nimport MicOff from '@material-ui/icons/MicOff';\nimport Videocam from '@material-ui/icons/Videocam';\nimport VideocamOff from '@material-ui/icons/VideocamOff';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport FullscreenExit from '@material-ui/icons/FullscreenExit';\nimport ScreenShare from '@material-ui/icons/ScreenShare';\nimport StopScreenShare from '@material-ui/icons/StopScreenShare';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Group from '@material-ui/icons/Group';\nimport DnsIcon from '@material-ui/icons/Dns';\n\nconst logo = require('../../assets/images/IUDX-logo.png');\nconst ipcam = require('../../assets/images/ipcam.png');\n\nexport default class ToolbarComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { fullscreen: false };\n        this.camStatusChanged = this.camStatusChanged.bind(this);\n        this.micStatusChanged = this.micStatusChanged.bind(this);\n        this.groupStatusChanged = this.groupStatusChanged.bind(this);\n        this.screenShare = this.screenShare.bind(this);\n        this.stopScreenShare = this.stopScreenShare.bind(this);\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\n        this.leaveSessionPage = this.leaveSessionPage.bind(this);\n        this.toggleChat = this.toggleChat.bind(this);\n        this.showIPCameraDialog = this.showIPCameraDialog.bind(this);\n        this.showIPCameraServerDialog = this.showIPCameraServerDialog.bind(this);\n    }\n\n\n    micStatusChanged() {\n        this.props.micStatusChanged();\n    }\n\n    camStatusChanged() {\n        this.props.camStatusChanged();\n    }\n\n    groupStatusChanged() {\n        this.props.groupStatusChanged();\n    }\n\n    screenShare() {\n        this.props.screenShare();\n    }\n\n    stopScreenShare() {\n        this.props.stopScreenShare();\n    }\n\n    toggleFullscreen() {\n        this.setState({ fullscreen: !this.state.fullscreen });\n        this.props.toggleFullscreen();\n    }\n\n    leaveSessionPage() {\n        this.props.leaveSessionPage();\n    }\n\n    toggleChat() {\n        this.props.toggleChat();\n    }\n\n    showIPCameraDialog(){\n        this.props.showIPCameraDialog();\n    }\n\n    showIPCameraServerDialog() {\n        this.props.showIPCameraServerDialog();\n    }\n\n    render() {\n        const mySessionId = this.props.sessionId;\n        const localUser = this.props.user;\n        return (\n            <AppBar className=\"toolbar\" id=\"header\">\n                <Toolbar className=\"toolbar\">\n                    <div id=\"navSessionInfo\">\n                        <img\n                            id=\"header_img\"\n                            alt=\"IUVDX\"\n                            src={logo}\n                        />\n\n                        {this.props.sessionId && <div id=\"titleContent\">\n                            <span id=\"session-title\">{mySessionId}</span>\n                        </div>}\n                    </div>\n\n                    <div className=\"buttonsContent\">\n                        <IconButton className=\"navButton\" onClick={this.showIPCameraDialog} >\n                            <img className=\"ipCamButton\" src={ipcam} alt=\"ipcam\"/>\n                        </IconButton>\n\n                        <IconButton className=\"navButton\" onClick={this.showIPCameraServerDialog}>\n                            <DnsIcon />\n                        </IconButton>\n                        \n                        <IconButton className=\"navButton\" id=\"navGroupButton\" onClick={this.groupStatusChanged}>\n                            {localUser !== undefined && localUser.isGroupActive() ? <Group />  : <Group color=\"secondary\" />}\n                        </IconButton>\n                        \n                        <IconButton className=\"navButton\" id=\"navMicButton\" onClick={this.micStatusChanged}>\n                            {localUser !== undefined && localUser.isAudioActive() ? <Mic /> : <MicOff color=\"secondary\" />}\n                        </IconButton>\n\n                        <IconButton className=\"navButton\" id=\"navCamButton\" onClick={this.camStatusChanged}>\n                            {localUser !== undefined && localUser.isVideoActive() ? (\n                                <Videocam />\n                            ) : (\n                                <VideocamOff color=\"secondary\" />\n                            )}\n                        </IconButton>\n\n\n                        {localUser !== undefined &&\n                            localUser.isScreenShareActive() ? \n                                (\n                                <IconButton onClick={this.stopScreenShare} id=\"navScreenButton\">\n                                    <StopScreenShare color=\"secondary\" />\n                                </IconButton>\n                            ) : (\n                                (\n                                <IconButton className=\"navButton\" onClick={this.screenShare}>\n                                    <ScreenShare />\n                                </IconButton>) \n                            )}\n\n                        <IconButton className=\"navButton\" onClick={this.toggleFullscreen}>\n                            {localUser !== undefined && this.state.fullscreen ? <FullscreenExit /> : <Fullscreen />}\n                        </IconButton>\n\n                        <IconButton color=\"secondary\" className=\"navButton\" onClick={this.leaveSessionPage} id=\"navLeaveButton\">\n                            <PowerSettingsNew />\n                        </IconButton>\n\n                         <IconButton onClick={this.toggleChat} id=\"navChatButton\">\n                            {this.props.showNotification && <div id=\"point\" className=\"\" />}\n                            <Tooltip title=\"Chat\">\n                                <QuestionAnswer />\n                            </Tooltip>\n                        </IconButton>\n\n                        \n\n                    </div>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}